                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.9 #9960 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___SMS__SDSC_signature
                             12 	.globl ___SMS__SDSC_descr
                             13 	.globl ___SMS__SDSC_name
                             14 	.globl ___SMS__SDSC_author
                             15 	.globl ___SMS__SEGA_signature
                             16 	.globl _main
                             17 	.globl _engine_content_manager_load_splash_screen
                             18 	.globl _engine_content_manager_load_sprite_palette
                             19 	.globl _engine_asm_manager_clear_VRAM
                             20 	.globl _SMS_waitForVBlank
                             21 	.globl _SMS_VDPturnOffFeature
                             22 	.globl _SMS_VDPturnOnFeature
                             23 	.globl _SMS_init
                             24 	.globl _bank_to_be_mapped_on_slot2
                             25 ;--------------------------------------------------------
                             26 ; special function registers
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DATA
                     FFFF    32 G$bank_to_be_mapped_on_slot2$0$0 == 0xffff
                     FFFF    33 _bank_to_be_mapped_on_slot2	=	0xffff
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _INITIALIZED
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DABS (ABS)
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;--------------------------------------------------------
                             50 ; Home
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _HOME
                             54 ;--------------------------------------------------------
                             55 ; code
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
                     0000    58 	G$main$0$0	= .
                             59 	.globl	G$main$0$0
                     0000    60 	C$main.c$3$0$0	= .
                             61 	.globl	C$main.c$3$0$0
                             62 ;main.c:3: void main( void )
                             63 ;	---------------------------------
                             64 ; Function main
                             65 ; ---------------------------------
   0000                      66 _main::
                     0000    67 	C$main.c$5$1$70	= .
                             68 	.globl	C$main.c$5$1$70
                             69 ;main.c:5: SMS_init();
   0000 CDr00r00      [17]   70 	call	_SMS_init
                     0003    71 	C$main.c$6$1$70	= .
                             72 	.globl	C$main.c$6$1$70
                             73 ;main.c:6: SMS_displayOff();
   0003 21 40 01      [10]   74 	ld	hl, #0x0140
   0006 CDr00r00      [17]   75 	call	_SMS_VDPturnOffFeature
                     0009    76 	C$main.c$7$1$70	= .
                             77 	.globl	C$main.c$7$1$70
                             78 ;main.c:7: engine_asm_manager_clear_VRAM();
   0009 CDr00r00      [17]   79 	call	_engine_asm_manager_clear_VRAM
                     000C    80 	C$main.c$9$1$70	= .
                             81 	.globl	C$main.c$9$1$70
                             82 ;main.c:9: engine_content_manager_load_sprite_palette();
   000C CDr00r00      [17]   83 	call	_engine_content_manager_load_sprite_palette
                     000F    84 	C$main.c$10$1$70	= .
                             85 	.globl	C$main.c$10$1$70
                             86 ;main.c:10: engine_content_manager_load_splash_screen();
   000F CDr00r00      [17]   87 	call	_engine_content_manager_load_splash_screen
                     0012    88 	C$main.c$12$1$70	= .
                             89 	.globl	C$main.c$12$1$70
                             90 ;main.c:12: SMS_displayOn();
   0012 21 40 01      [10]   91 	ld	hl, #0x0140
   0015 CDr00r00      [17]   92 	call	_SMS_VDPturnOnFeature
   0018                      93 00102$:
                     0018    94 	C$main.c$15$3$72	= .
                             95 	.globl	C$main.c$15$3$72
                             96 ;main.c:15: SMS_waitForVBlank();
   0018 CDr00r00      [17]   97 	call	_SMS_waitForVBlank
                     001B    98 	C$main.c$17$2$71	= .
                             99 	.globl	C$main.c$17$2$71
                     001B   100 	XG$main$0$0	= .
                            101 	.globl	XG$main$0$0
   001B 18 FB         [12]  102 	jr	00102$
                            103 	.area _CODE
                     001D   104 Fmain$__str_0$0$0 == .
   001D                     105 __str_0:
   001D 53 74 65 76 65 50   106 	.ascii "StevePro Studios"
        72 6F 20 53 74 75
        64 69 6F 73
   002D 00                  107 	.db 0x00
                     002E   108 Fmain$__str_1$0$0 == .
   002E                     109 __str_1:
   002E 48 65 6C 6C 6F 20   110 	.ascii "Hello World"
        57 6F 72 6C 64
   0039 00                  111 	.db 0x00
                     003A   112 Fmain$__str_2$0$0 == .
   003A                     113 __str_2:
   003A 53 69 6D 70 6C 65   114 	.ascii "Simple Sega Master System demo to run on real hardware"
        20 53 65 67 61 20
        4D 61 73 74 65 72
        20 53 79 73 74 65
        6D 20 64 65 6D 6F
        20 74 6F 20 72 75
        6E 20 6F 6E 20 72
        65 61 6C 20 68 61
        72 64 77 61 72 65
   0070 00                  115 	.db 0x00
                            116 	.area _INITIALIZER
                            117 	.area _CABS (ABS)
   7FF0                     118 	.org 0x7FF0
                     7FF0   119 G$__SMS__SEGA_signature$0$0 == .
   7FF0                     120 ___SMS__SEGA_signature:
   7FF0 54                  121 	.db #0x54	; 84	'T'
   7FF1 4D                  122 	.db #0x4d	; 77	'M'
   7FF2 52                  123 	.db #0x52	; 82	'R'
   7FF3 20                  124 	.db #0x20	; 32
   7FF4 53                  125 	.db #0x53	; 83	'S'
   7FF5 45                  126 	.db #0x45	; 69	'E'
   7FF6 47                  127 	.db #0x47	; 71	'G'
   7FF7 41                  128 	.db #0x41	; 65	'A'
   7FF8 FF                  129 	.db #0xff	; 255
   7FF9 FF                  130 	.db #0xff	; 255
   7FFA FF                  131 	.db #0xff	; 255
   7FFB FF                  132 	.db #0xff	; 255
   7FFC 99                  133 	.db #0x99	; 153
   7FFD 99                  134 	.db #0x99	; 153
   7FFE 00                  135 	.db #0x00	; 0
   7FFF 4C                  136 	.db #0x4c	; 76	'L'
   7FCF                     137 	.org 0x7FCF
                     7FCF   138 G$__SMS__SDSC_author$0$0 == .
   7FCF                     139 ___SMS__SDSC_author:
   7FCF 53 74 65 76 65 50   140 	.ascii "StevePro Studios"
        72 6F 20 53 74 75
        64 69 6F 73
   7FDF 00                  141 	.db 0x00
   7FC3                     142 	.org 0x7FC3
                     7FC3   143 G$__SMS__SDSC_name$0$0 == .
   7FC3                     144 ___SMS__SDSC_name:
   7FC3 48 65 6C 6C 6F 20   145 	.ascii "Hello World"
        57 6F 72 6C 64
   7FCE 00                  146 	.db 0x00
   7F8C                     147 	.org 0x7F8C
                     7F8C   148 G$__SMS__SDSC_descr$0$0 == .
   7F8C                     149 ___SMS__SDSC_descr:
   7F8C 53 69 6D 70 6C 65   150 	.ascii "Simple Sega Master System demo to run on real hardware"
        20 53 65 67 61 20
        4D 61 73 74 65 72
        20 53 79 73 74 65
        6D 20 64 65 6D 6F
        20 74 6F 20 72 75
        6E 20 6F 6E 20 72
        65 61 6C 20 68 61
        72 64 77 61 72 65
   7FC2 00                  151 	.db 0x00
   7FE0                     152 	.org 0x7FE0
                     7FE0   153 G$__SMS__SDSC_signature$0$0 == .
   7FE0                     154 ___SMS__SDSC_signature:
   7FE0 53                  155 	.db #0x53	; 83	'S'
   7FE1 44                  156 	.db #0x44	; 68	'D'
   7FE2 53                  157 	.db #0x53	; 83	'S'
   7FE3 43                  158 	.db #0x43	; 67	'C'
   7FE4 01                  159 	.db #0x01	; 1
   7FE5 00                  160 	.db #0x00	; 0
   7FE6 15                  161 	.db #0x15	; 21
   7FE7 09                  162 	.db #0x09	; 9
   7FE8 17                  163 	.db #0x17	; 23
   7FE9 20                  164 	.db #0x20	; 32
   7FEA CF                  165 	.db #0xcf	; 207
   7FEB 7F                  166 	.db #0x7f	; 127
   7FEC C3                  167 	.db #0xc3	; 195
   7FED 7F                  168 	.db #0x7f	; 127
   7FEE 8C                  169 	.db #0x8c	; 140
   7FEF 7F                  170 	.db #0x7f	; 127
