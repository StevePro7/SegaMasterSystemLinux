                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.9 #9960 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module content_manager
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _SMS_loadSTMcompressedTileMap
                             12 	.globl _SMS_loadPSGaidencompressedTiles
                             13 	.globl _SMS_loadBGPalette
                             14 	.globl _SMS_setSpritePaletteColor
                             15 	.globl _bank_to_be_mapped_on_slot2
                             16 	.globl _engine_content_manager_load_sprite_palette
                             17 	.globl _engine_content_manager_load_splash_screen
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
                     FFFF    25 G$bank_to_be_mapped_on_slot2$0$0 == 0xffff
                     FFFF    26 _bank_to_be_mapped_on_slot2	=	0xffff
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _INITIALIZED
                             31 ;--------------------------------------------------------
                             32 ; absolute external ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DABS (ABS)
                             35 ;--------------------------------------------------------
                             36 ; global & static initialisations
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _GSINIT
                             40 	.area _GSFINAL
                             41 	.area _GSINIT
                             42 ;--------------------------------------------------------
                             43 ; Home
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _HOME
                             47 ;--------------------------------------------------------
                             48 ; code
                             49 ;--------------------------------------------------------
                             50 	.area _CODE
                     0000    51 	G$engine_content_manager_load_sprite_palette$0$0	= .
                             52 	.globl	G$engine_content_manager_load_sprite_palette$0$0
                     0000    53 	C$content_manager.c$7$0$0	= .
                             54 	.globl	C$content_manager.c$7$0$0
                             55 ;content_manager.c:7: void engine_content_manager_load_sprite_palette()
                             56 ;	---------------------------------
                             57 ; Function engine_content_manager_load_sprite_palette
                             58 ; ---------------------------------
   0000                      59 _engine_content_manager_load_sprite_palette::
                     0000    60 	C$content_manager.c$9$1$49	= .
                             61 	.globl	C$content_manager.c$9$1$49
                             62 ;content_manager.c:9: SMS_setSpritePaletteColor( RGB( 0, 0, 0 ), 0 );
   0000 21 00 00      [10]   63 	ld	hl, #0x0000
   0003 E5            [11]   64 	push	hl
   0004 CDr00r00      [17]   65 	call	_SMS_setSpritePaletteColor
   0007 F1            [10]   66 	pop	af
                     0008    67 	C$content_manager.c$10$1$49	= .
                             68 	.globl	C$content_manager.c$10$1$49
                     0008    69 	XG$engine_content_manager_load_sprite_palette$0$0	= .
                             70 	.globl	XG$engine_content_manager_load_sprite_palette$0$0
   0008 C9            [10]   71 	ret
                     0009    72 	G$engine_content_manager_load_splash_screen$0$0	= .
                             73 	.globl	G$engine_content_manager_load_splash_screen$0$0
                     0009    74 	C$content_manager.c$12$1$49	= .
                             75 	.globl	C$content_manager.c$12$1$49
                             76 ;content_manager.c:12: void engine_content_manager_load_splash_screen()
                             77 ;	---------------------------------
                             78 ; Function engine_content_manager_load_splash_screen
                             79 ; ---------------------------------
   0009                      80 _engine_content_manager_load_splash_screen::
                     0009    81 	C$content_manager.c$14$1$50	= .
                             82 	.globl	C$content_manager.c$14$1$50
                             83 ;content_manager.c:14: SMS_loadPSGaidencompressedTiles( splash__tiles__psgcompr, SPLASH_TILES_OFFSET );
   0009 21 80 00      [10]   84 	ld	hl, #0x0080
   000C E5            [11]   85 	push	hl
   000D 21r00r00      [10]   86 	ld	hl, #_splash__tiles__psgcompr
   0010 E5            [11]   87 	push	hl
   0011 CDr00r00      [17]   88 	call	_SMS_loadPSGaidencompressedTiles
   0014 F1            [10]   89 	pop	af
   0015 F1            [10]   90 	pop	af
                     0016    91 	C$content_manager.c$15$1$50	= .
                             92 	.globl	C$content_manager.c$15$1$50
                             93 ;content_manager.c:15: SMS_loadSTMcompressedTileMap( 0, 0, ( void * ) splash__tilemap__stmcompr );
   0016 01r00r00      [10]   94 	ld	bc, #_splash__tilemap__stmcompr+0
   0019 C5            [11]   95 	push	bc
   001A 21 00 00      [10]   96 	ld	hl, #0x0000
   001D E5            [11]   97 	push	hl
   001E CDr00r00      [17]   98 	call	_SMS_loadSTMcompressedTileMap
   0021 F1            [10]   99 	pop	af
   0022 F1            [10]  100 	pop	af
                     0023   101 	C$content_manager.c$16$1$50	= .
                            102 	.globl	C$content_manager.c$16$1$50
                            103 ;content_manager.c:16: SMS_loadBGPalette( ( void * ) splash__palette__bin );
   0023 21r00r00      [10]  104 	ld	hl, #_splash__palette__bin+0
                     0026   105 	C$content_manager.c$17$1$50	= .
                            106 	.globl	C$content_manager.c$17$1$50
                     0026   107 	XG$engine_content_manager_load_splash_screen$0$0	= .
                            108 	.globl	XG$engine_content_manager_load_splash_screen$0$0
   0026 C3r00r00      [10]  109 	jp  _SMS_loadBGPalette
                            110 	.area _CODE
                            111 	.area _INITIALIZER
                            112 	.area _CABS (ABS)
