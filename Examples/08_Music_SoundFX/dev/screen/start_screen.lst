                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module start_screen
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _engine_tree_manager_draw
                                     12 	.globl _engine_text_manager_title
                                     13 	.globl _engine_input_manager_hold_fire1
                                     14 	.globl _engine_content_manager_load_sprites
                                     15 	.globl _engine_content_manager_load_tiles
                                     16 	.globl _engine_asm_manager_clear_VRAM
                                     17 	.globl _devkit_SMS_displayOff
                                     18 	.globl _devkit_SMS_displayOn
                                     19 	.globl _screen_start_screen_load
                                     20 	.globl _screen_start_screen_update
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                           000000    52 	G$screen_start_screen_load$0$0	= .
                                     53 	.globl	G$screen_start_screen_load$0$0
                           000000    54 	C$start_screen.c$10$0_0$19	= .
                                     55 	.globl	C$start_screen.c$10$0_0$19
                                     56 ;start_screen.c:10: void screen_start_screen_load()
                                     57 ;	---------------------------------
                                     58 ; Function screen_start_screen_load
                                     59 ; ---------------------------------
      000000                         60 _screen_start_screen_load::
                           000000    61 	C$start_screen.c$12$1_0$19	= .
                                     62 	.globl	C$start_screen.c$12$1_0$19
                                     63 ;start_screen.c:12: devkit_SMS_displayOff();
      000000 CDr00r00         [17]   64 	call	_devkit_SMS_displayOff
                           000003    65 	C$start_screen.c$13$1_0$19	= .
                                     66 	.globl	C$start_screen.c$13$1_0$19
                                     67 ;start_screen.c:13: engine_asm_manager_clear_VRAM();
      000003 CDr00r00         [17]   68 	call	_engine_asm_manager_clear_VRAM
                           000006    69 	C$start_screen.c$14$1_0$19	= .
                                     70 	.globl	C$start_screen.c$14$1_0$19
                                     71 ;start_screen.c:14: engine_content_manager_load_tiles();
      000006 CDr00r00         [17]   72 	call	_engine_content_manager_load_tiles
                           000009    73 	C$start_screen.c$15$1_0$19	= .
                                     74 	.globl	C$start_screen.c$15$1_0$19
                                     75 ;start_screen.c:15: engine_content_manager_load_sprites();
      000009 CDr00r00         [17]   76 	call	_engine_content_manager_load_sprites
                           00000C    77 	C$start_screen.c$16$1_0$19	= .
                                     78 	.globl	C$start_screen.c$16$1_0$19
                                     79 ;start_screen.c:16: engine_text_manager_title();
      00000C CDr00r00         [17]   80 	call	_engine_text_manager_title
                           00000F    81 	C$start_screen.c$17$1_0$19	= .
                                     82 	.globl	C$start_screen.c$17$1_0$19
                                     83 ;start_screen.c:17: engine_tree_manager_draw();
      00000F CDr00r00         [17]   84 	call	_engine_tree_manager_draw
                           000012    85 	C$start_screen.c$18$1_0$19	= .
                                     86 	.globl	C$start_screen.c$18$1_0$19
                                     87 ;start_screen.c:18: devkit_SMS_displayOn();
                           000012    88 	C$start_screen.c$19$1_0$19	= .
                                     89 	.globl	C$start_screen.c$19$1_0$19
                                     90 ;start_screen.c:19: }
                           000012    91 	C$start_screen.c$19$1_0$19	= .
                                     92 	.globl	C$start_screen.c$19$1_0$19
                           000012    93 	XG$screen_start_screen_load$0$0	= .
                                     94 	.globl	XG$screen_start_screen_load$0$0
      000012 C3r00r00         [10]   95 	jp	_devkit_SMS_displayOn
                           000015    96 	G$screen_start_screen_update$0$0	= .
                                     97 	.globl	G$screen_start_screen_update$0$0
                           000015    98 	C$start_screen.c$21$1_0$21	= .
                                     99 	.globl	C$start_screen.c$21$1_0$21
                                    100 ;start_screen.c:21: void screen_start_screen_update( unsigned char *screen_type )
                                    101 ;	---------------------------------
                                    102 ; Function screen_start_screen_update
                                    103 ; ---------------------------------
      000015                        104 _screen_start_screen_update::
                           000015   105 	C$start_screen.c$23$1_0$21	= .
                                    106 	.globl	C$start_screen.c$23$1_0$21
                                    107 ;start_screen.c:23: unsigned char input = engine_input_manager_hold_fire1();
      000015 CDr00r00         [17]  108 	call	_engine_input_manager_hold_fire1
      000018 4D               [ 4]  109 	ld	c, l
                           000019   110 	C$start_screen.c$26$1_0$21	= .
                                    111 	.globl	C$start_screen.c$26$1_0$21
                                    112 ;start_screen.c:26: *screen_type = screen_type_music;
      000019 D1               [10]  113 	pop	de
      00001A E1               [10]  114 	pop	hl
      00001B E5               [11]  115 	push	hl
      00001C D5               [11]  116 	push	de
                           00001D   117 	C$start_screen.c$24$1_0$21	= .
                                    118 	.globl	C$start_screen.c$24$1_0$21
                                    119 ;start_screen.c:24: if( input )
      00001D 79               [ 4]  120 	ld	a, c
      00001E B7               [ 4]  121 	or	a, a
      00001F 28 03            [12]  122 	jr	Z, 00102$
                           000021   123 	C$start_screen.c$26$2_0$22	= .
                                    124 	.globl	C$start_screen.c$26$2_0$22
                                    125 ;start_screen.c:26: *screen_type = screen_type_music;
      000021 36 02            [10]  126 	ld	(hl), #0x02
                           000023   127 	C$start_screen.c$27$2_0$22	= .
                                    128 	.globl	C$start_screen.c$27$2_0$22
                                    129 ;start_screen.c:27: return;
      000023 C9               [10]  130 	ret
      000024                        131 00102$:
                           000024   132 	C$start_screen.c$30$1_0$21	= .
                                    133 	.globl	C$start_screen.c$30$1_0$21
                                    134 ;start_screen.c:30: *screen_type = screen_type_start;
      000024 36 01            [10]  135 	ld	(hl), #0x01
                           000026   136 	C$start_screen.c$31$1_0$21	= .
                                    137 	.globl	C$start_screen.c$31$1_0$21
                                    138 ;start_screen.c:31: }
                           000026   139 	C$start_screen.c$31$1_0$21	= .
                                    140 	.globl	C$start_screen.c$31$1_0$21
                           000026   141 	XG$screen_start_screen_update$0$0	= .
                                    142 	.globl	XG$screen_start_screen_update$0$0
      000026 C9               [10]  143 	ret
                                    144 	.area _CODE
                                    145 	.area _INITIALIZER
                                    146 	.area _CABS (ABS)
