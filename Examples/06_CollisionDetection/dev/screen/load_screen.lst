                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.9 #9960 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module load_screen
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _engine_input_manager_hold_fire1
                             12 	.globl _engine_font_manager_draw_text
                             13 	.globl _screen_load_screen_load
                             14 	.globl _screen_load_screen_update
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _INITIALIZED
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                     0000    46 	G$screen_load_screen_load$0$0	= .
                             47 	.globl	G$screen_load_screen_load$0$0
                     0000    48 	C$load_screen.c$11$0$0	= .
                             49 	.globl	C$load_screen.c$11$0$0
                             50 ;load_screen.c:11: void screen_load_screen_load()
                             51 ;	---------------------------------
                             52 ; Function screen_load_screen_load
                             53 ; ---------------------------------
   0000                      54 _screen_load_screen_load::
                     0000    55 	C$load_screen.c$13$1$23	= .
                             56 	.globl	C$load_screen.c$13$1$23
                             57 ;load_screen.c:13: engine_font_manager_draw_text( LOCALE_LINE1, 9, 10, 11 );
   0000 21 0A 0B      [10]   58 	ld	hl, #0x0b0a
   0003 E5            [11]   59 	push	hl
   0004 3E 09         [ 7]   60 	ld	a, #0x09
   0006 F5            [11]   61 	push	af
   0007 33            [ 6]   62 	inc	sp
   0008 21r46r00      [10]   63 	ld	hl, #___str_0
   000B E5            [11]   64 	push	hl
   000C CDr00r00      [17]   65 	call	_engine_font_manager_draw_text
   000F F1            [10]   66 	pop	af
                     0010    67 	C$load_screen.c$14$1$23	= .
                             68 	.globl	C$load_screen.c$14$1$23
                             69 ;load_screen.c:14: engine_font_manager_draw_text( LOCALE_LINE2, 9, 10, 12 );
   0010 33            [ 6]   70 	inc	sp
   0011 21 0A 0C      [10]   71 	ld	hl,#0x0c0a
   0014 E3            [19]   72 	ex	(sp),hl
   0015 3E 09         [ 7]   73 	ld	a, #0x09
   0017 F5            [11]   74 	push	af
   0018 33            [ 6]   75 	inc	sp
   0019 21r50r00      [10]   76 	ld	hl, #___str_1
   001C E5            [11]   77 	push	hl
   001D CDr00r00      [17]   78 	call	_engine_font_manager_draw_text
   0020 F1            [10]   79 	pop	af
                     0021    80 	C$load_screen.c$16$1$23	= .
                             81 	.globl	C$load_screen.c$16$1$23
                             82 ;load_screen.c:16: engine_font_manager_draw_text( LOCALE_BLANK, 9, 4, 21 );
   0021 33            [ 6]   83 	inc	sp
   0022 21 04 15      [10]   84 	ld	hl,#0x1504
   0025 E3            [19]   85 	ex	(sp),hl
   0026 3E 09         [ 7]   86 	ld	a, #0x09
   0028 F5            [11]   87 	push	af
   0029 33            [ 6]   88 	inc	sp
   002A 21r5Ar00      [10]   89 	ld	hl, #___str_2
   002D E5            [11]   90 	push	hl
   002E CDr00r00      [17]   91 	call	_engine_font_manager_draw_text
   0031 F1            [10]   92 	pop	af
                     0032    93 	C$load_screen.c$17$1$23	= .
                             94 	.globl	C$load_screen.c$17$1$23
                             95 ;load_screen.c:17: engine_font_manager_draw_text( LOCALE_BLANK, 9, 15, 21 );
   0032 33            [ 6]   96 	inc	sp
   0033 21 0F 15      [10]   97 	ld	hl,#0x150f
   0036 E3            [19]   98 	ex	(sp),hl
   0037 3E 09         [ 7]   99 	ld	a, #0x09
   0039 F5            [11]  100 	push	af
   003A 33            [ 6]  101 	inc	sp
   003B 21r5Ar00      [10]  102 	ld	hl, #___str_2
   003E E5            [11]  103 	push	hl
   003F CDr00r00      [17]  104 	call	_engine_font_manager_draw_text
   0042 F1            [10]  105 	pop	af
   0043 F1            [10]  106 	pop	af
   0044 33            [ 6]  107 	inc	sp
                     0045   108 	C$load_screen.c$18$1$23	= .
                            109 	.globl	C$load_screen.c$18$1$23
                     0045   110 	XG$screen_load_screen_load$0$0	= .
                            111 	.globl	XG$screen_load_screen_load$0$0
   0045 C9            [10]  112 	ret
                     0046   113 Fload_screen$__str_0$0$0 == .
   0046                     114 ___str_0:
   0046 43 4F 4C 4C 49 53   115 	.ascii "COLLISION"
        49 4F 4E
   004F 00                  116 	.db 0x00
                     0050   117 Fload_screen$__str_1$0$0 == .
   0050                     118 ___str_1:
   0050 44 45 54 45 43 54   119 	.ascii "DETECTION"
        49 4F 4E
   0059 00                  120 	.db 0x00
                     005A   121 Fload_screen$__str_2$0$0 == .
   005A                     122 ___str_2:
   005A 20 20 20 20 20 20   123 	.ascii "         "
        20 20 20
   0063 00                  124 	.db 0x00
                     0064   125 	G$screen_load_screen_update$0$0	= .
                            126 	.globl	G$screen_load_screen_update$0$0
                     0064   127 	C$load_screen.c$20$1$23	= .
                            128 	.globl	C$load_screen.c$20$1$23
                            129 ;load_screen.c:20: void screen_load_screen_update( unsigned char *screen_type )
                            130 ;	---------------------------------
                            131 ; Function screen_load_screen_update
                            132 ; ---------------------------------
   0064                     133 _screen_load_screen_update::
                     0064   134 	C$load_screen.c$22$1$25	= .
                            135 	.globl	C$load_screen.c$22$1$25
                            136 ;load_screen.c:22: unsigned char input = engine_input_manager_hold_fire1();
   0064 CDr00r00      [17]  137 	call	_engine_input_manager_hold_fire1
   0067 4D            [ 4]  138 	ld	c, l
                     0068   139 	C$load_screen.c$25$1$25	= .
                            140 	.globl	C$load_screen.c$25$1$25
                            141 ;load_screen.c:25: *screen_type = screen_type_test;
   0068 D1            [10]  142 	pop	de
   0069 E1            [10]  143 	pop	hl
   006A E5            [11]  144 	push	hl
   006B D5            [11]  145 	push	de
                     006C   146 	C$load_screen.c$23$1$25	= .
                            147 	.globl	C$load_screen.c$23$1$25
                            148 ;load_screen.c:23: if( input )
   006C 79            [ 4]  149 	ld	a, c
   006D B7            [ 4]  150 	or	a, a
   006E 28 03         [12]  151 	jr	Z,00102$
                     0070   152 	C$load_screen.c$25$2$26	= .
                            153 	.globl	C$load_screen.c$25$2$26
                            154 ;load_screen.c:25: *screen_type = screen_type_test;
   0070 36 03         [10]  155 	ld	(hl), #0x03
                     0072   156 	C$load_screen.c$26$2$26	= .
                            157 	.globl	C$load_screen.c$26$2$26
                            158 ;load_screen.c:26: return;
   0072 C9            [10]  159 	ret
   0073                     160 00102$:
                     0073   161 	C$load_screen.c$29$1$25	= .
                            162 	.globl	C$load_screen.c$29$1$25
                            163 ;load_screen.c:29: *screen_type = screen_type_load;
   0073 36 02         [10]  164 	ld	(hl), #0x02
                     0075   165 	C$load_screen.c$30$1$25	= .
                            166 	.globl	C$load_screen.c$30$1$25
                     0075   167 	XG$screen_load_screen_update$0$0	= .
                            168 	.globl	XG$screen_load_screen_update$0$0
   0075 C9            [10]  169 	ret
                            170 	.area _CODE
                            171 	.area _INITIALIZER
                            172 	.area _CABS (ABS)
