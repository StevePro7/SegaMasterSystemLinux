                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _SMS_setSpritePaletteColor
                                     13 	.globl _SMS_waitForVBlank
                                     14 	.globl _SMS_VDPturnOnFeature
                                     15 	.globl _SMS_SRAM
                                     16 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     17 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                           00FFFF    25 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFC    26 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    27 _SMS_SRAM	=	0x8000
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                                     52 ;main.c:2: void main (void)
                                     53 ;	---------------------------------
                                     54 ; Function main
                                     55 ; ---------------------------------
      000000                         56 _main::
                                     57 ;main.c:4: SMS_setSpritePaletteColor(0, RGB(3,3,3));
      000000 3E 3F            [ 7]   58 	ld	a, #0x3f
      000002 F5               [11]   59 	push	af
      000003 33               [ 6]   60 	inc	sp
      000004 AF               [ 4]   61 	xor	a, a
      000005 F5               [11]   62 	push	af
      000006 33               [ 6]   63 	inc	sp
      000007 CDr00r00         [17]   64 	call	_SMS_setSpritePaletteColor
      00000A F1               [10]   65 	pop	af
                                     66 ;main.c:5: SMS_displayOn();
      00000B 21 40 01         [10]   67 	ld	hl, #0x0140
      00000E CDr00r00         [17]   68 	call	_SMS_VDPturnOnFeature
      000011                         69 00102$:
                                     70 ;main.c:8: SMS_waitForVBlank();
      000011 CDr00r00         [17]   71 	call	_SMS_waitForVBlank
                                     72 ;main.c:10: }
      000014 18 FB            [12]   73 	jr	00102$
                                     74 	.area _CODE
                                     75 	.area _INITIALIZER
                                     76 	.area _CABS (ABS)
