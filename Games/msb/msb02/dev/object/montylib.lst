                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module montylib
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _GSL_getCurrentY
                                     12 	.globl _GSL_getCurrentX
                                     13 	.globl _GSL_getMapHeightInPixels
                                     14 	.globl _GSL_getMapWidthInPixels
                                     15 	.globl _GSL_VBlank
                                     16 	.globl _GSL_scroll
                                     17 	.globl _GSL_refreshVDP
                                     18 	.globl _GSL_positionWindow
                                     19 	.globl _GSL_initializeMap
                                     20 	.globl _SMS_VRAMmemset
                                     21 	.globl _SMS_copySpritestoSAT
                                     22 	.globl _SMS_waitForVBlank
                                     23 	.globl _SMS_setSpriteMode
                                     24 	.globl _SMS_setBackdropColor
                                     25 	.globl _SMS_VDPturnOnFeature
                                     26 	.globl _SMS_init
                                     27 	.globl _manage_sound_frame
                                     28 	.globl _rand_index
                                     29 	.globl _frame_cnt
                                     30 	.globl _pause
                                     31 	.globl _SMS_SRAM
                                     32 	.globl _SRAM_bank_to_be_mapped_on_slot2
                                     33 	.globl _ROM_bank_to_be_mapped_on_slot2
                                     34 	.globl _randLUT
                                     35 	.globl _init_console
                                     36 	.globl _init_scroll
                                     37 	.globl _move_scroll
                                     38 	.globl _get_scroll_x
                                     39 	.globl _get_scroll_y
                                     40 	.globl _waitForFrame
                                     41 	.globl _rand
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
                           00FFFF    49 G$ROM_bank_to_be_mapped_on_slot2$0_0$0 == 0xffff
                           00FFFF    50 _ROM_bank_to_be_mapped_on_slot2	=	0xffff
                           00FFFC    51 G$SRAM_bank_to_be_mapped_on_slot2$0_0$0 == 0xfffc
                           00FFFC    52 _SRAM_bank_to_be_mapped_on_slot2	=	0xfffc
                           008000    53 G$SMS_SRAM$0_0$0 == 0x8000
                           008000    54 _SMS_SRAM	=	0x8000
                           000000    55 G$pause$0_0$0==.
      000000                         56 _pause::
      000000                         57 	.ds 1
                           000001    58 G$frame_cnt$0_0$0==.
      000001                         59 _frame_cnt::
      000001                         60 	.ds 2
                                     61 ;--------------------------------------------------------
                                     62 ; ram data
                                     63 ;--------------------------------------------------------
                                     64 	.area _INITIALIZED
                           000000    65 G$rand_index$0_0$0==.
      000000                         66 _rand_index::
      000000                         67 	.ds 1
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area _DABS (ABS)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area _HOME
                                     76 	.area _GSINIT
                                     77 	.area _GSFINAL
                                     78 	.area _GSINIT
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area _HOME
                                     83 	.area _HOME
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area _CODE
                           000000    88 	G$init_console$0$0	= .
                                     89 	.globl	G$init_console$0$0
                           000000    90 	C$montylib.c$16$0_0$90	= .
                                     91 	.globl	C$montylib.c$16$0_0$90
                                     92 ;montylib.c:16: void init_console() {
                                     93 ;	---------------------------------
                                     94 ; Function init_console
                                     95 ; ---------------------------------
      000000                         96 _init_console::
                           000000    97 	C$montylib.c$17$1_0$90	= .
                                     98 	.globl	C$montylib.c$17$1_0$90
                                     99 ;montylib.c:17: SMS_init();
      000000 CDr00r00         [17]  100 	call	_SMS_init
                           000003   101 	C$montylib.c$18$1_0$90	= .
                                    102 	.globl	C$montylib.c$18$1_0$90
                                    103 ;montylib.c:18: SMS_VRAMmemset(0x4000, 0x00, 0x4000);
      000003 21 00 40         [10]  104 	ld	hl, #0x4000
      000006 E5               [11]  105 	push	hl
      000007 AF               [ 4]  106 	xor	a, a
      000008 F5               [11]  107 	push	af
      000009 33               [ 6]  108 	inc	sp
      00000A 2E 00            [ 7]  109 	ld	l, #0x00
      00000C E5               [11]  110 	push	hl
      00000D CDr00r00         [17]  111 	call	_SMS_VRAMmemset
      000010 F1               [10]  112 	pop	af
                           000011   113 	C$montylib.c$19$1_0$90	= .
                                    114 	.globl	C$montylib.c$19$1_0$90
                                    115 ;montylib.c:19: SMS_VRAMmemset(0xC000, 0x00, 0x0020);
      000011 33               [ 6]  116 	inc	sp
      000012 21 20 00         [10]  117 	ld	hl,#0x0020
      000015 E3               [19]  118 	ex	(sp),hl
      000016 AF               [ 4]  119 	xor	a, a
      000017 F5               [11]  120 	push	af
      000018 33               [ 6]  121 	inc	sp
      000019 21 00 C0         [10]  122 	ld	hl, #0xc000
      00001C E5               [11]  123 	push	hl
      00001D CDr00r00         [17]  124 	call	_SMS_VRAMmemset
      000020 F1               [10]  125 	pop	af
      000021 F1               [10]  126 	pop	af
      000022 33               [ 6]  127 	inc	sp
                           000023   128 	C$montylib.c$20$1_0$90	= .
                                    129 	.globl	C$montylib.c$20$1_0$90
                                    130 ;montylib.c:20: SMS_setSpriteMode(SPRITEMODE_NORMAL);
      000023 2E 00            [ 7]  131 	ld	l, #0x00
      000025 CDr00r00         [17]  132 	call	_SMS_setSpriteMode
                           000028   133 	C$montylib.c$21$1_0$90	= .
                                    134 	.globl	C$montylib.c$21$1_0$90
                                    135 ;montylib.c:21: SMS_displayOn();
      000028 21 40 01         [10]  136 	ld	hl, #0x0140
      00002B CDr00r00         [17]  137 	call	_SMS_VDPturnOnFeature
                           00002E   138 	C$montylib.c$22$1_0$90	= .
                                    139 	.globl	C$montylib.c$22$1_0$90
                                    140 ;montylib.c:22: SMS_VDPturnOnFeature(VDPFEATURE_LEFTCOLBLANK);
      00002E 21 20 00         [10]  141 	ld	hl, #0x0020
      000031 CDr00r00         [17]  142 	call	_SMS_VDPturnOnFeature
                           000034   143 	C$montylib.c$23$1_0$90	= .
                                    144 	.globl	C$montylib.c$23$1_0$90
                                    145 ;montylib.c:23: SMS_setBackdropColor(0);
      000034 2E 00            [ 7]  146 	ld	l, #0x00
      000036 CDr00r00         [17]  147 	call	_SMS_setBackdropColor
                           000039   148 	C$montylib.c$24$1_0$90	= .
                                    149 	.globl	C$montylib.c$24$1_0$90
                                    150 ;montylib.c:24: pause = false;
      000039 3E 00            [ 7]  151 	ld	a, #0x00
      00003B 32r00r00         [13]  152 	ld	(#_pause), a
                           00003E   153 	C$montylib.c$25$1_0$90	= .
                                    154 	.globl	C$montylib.c$25$1_0$90
                                    155 ;montylib.c:25: }
                           00003E   156 	C$montylib.c$25$1_0$90	= .
                                    157 	.globl	C$montylib.c$25$1_0$90
                           00003E   158 	XG$init_console$0$0	= .
                                    159 	.globl	XG$init_console$0$0
      00003E C9               [10]  160 	ret
                           00003F   161 G$randLUT$0_0$0 == .
      00003F                        162 _randLUT:
      00003F 0F                     163 	.db #0x0f	; 15
      000040 6A                     164 	.db #0x6a	; 106	'j'
      000041 09                     165 	.db #0x09	; 9
      000042 8E                     166 	.db #0x8e	; 142
      000043 29                     167 	.db #0x29	; 41
      000044 7C                     168 	.db #0x7c	; 124
      000045 76                     169 	.db #0x76	; 118	'v'
      000046 7D                     170 	.db #0x7d	; 125
      000047 ED                     171 	.db #0xed	; 237
      000048 83                     172 	.db #0x83	; 131
      000049 34                     173 	.db #0x34	; 52	'4'
      00004A 6A                     174 	.db #0x6a	; 106	'j'
      00004B C2                     175 	.db #0xc2	; 194
      00004C D0                     176 	.db #0xd0	; 208
      00004D 5C                     177 	.db #0x5c	; 92
      00004E 38                     178 	.db #0x38	; 56	'8'
      00004F 80                     179 	.db #0x80	; 128
      000050 0F                     180 	.db #0x0f	; 15
      000051 4D                     181 	.db #0x4d	; 77	'M'
      000052 A8                     182 	.db #0xa8	; 168
      000053 68                     183 	.db #0x68	; 104	'h'
      000054 34                     184 	.db #0x34	; 52	'4'
      000055 BF                     185 	.db #0xbf	; 191
      000056 DA                     186 	.db #0xda	; 218
      000057 CC                     187 	.db #0xcc	; 204
      000058 9A                     188 	.db #0x9a	; 154
      000059 C1                     189 	.db #0xc1	; 193
      00005A 65                     190 	.db #0x65	; 101	'e'
      00005B F6                     191 	.db #0xf6	; 246
      00005C 46                     192 	.db #0x46	; 70	'F'
      00005D 0A                     193 	.db #0x0a	; 10
      00005E E6                     194 	.db #0xe6	; 230
      00005F A0                     195 	.db #0xa0	; 160
      000060 2B                     196 	.db #0x2b	; 43
      000061 00                     197 	.db #0x00	; 0
      000062 80                     198 	.db #0x80	; 128
      000063 38                     199 	.db #0x38	; 56	'8'
      000064 B5                     200 	.db #0xb5	; 181
      000065 9A                     201 	.db #0x9a	; 154
      000066 C3                     202 	.db #0xc3	; 195
      000067 E9                     203 	.db #0xe9	; 233
      000068 A8                     204 	.db #0xa8	; 168
      000069 6F                     205 	.db #0x6f	; 111	'o'
      00006A 0E                     206 	.db #0x0e	; 14
      00006B BC                     207 	.db #0xbc	; 188
      00006C 1B                     208 	.db #0x1b	; 27
      00006D 8A                     209 	.db #0x8a	; 138
      00006E 70                     210 	.db #0x70	; 112	'p'
      00006F 42                     211 	.db #0x42	; 66	'B'
      000070 58                     212 	.db #0x58	; 88	'X'
      000071 22                     213 	.db #0x22	; 34
      000072 9D                     214 	.db #0x9d	; 157
      000073 93                     215 	.db #0x93	; 147
      000074 41                     216 	.db #0x41	; 65	'A'
      000075 13                     217 	.db #0x13	; 19
      000076 B4                     218 	.db #0xb4	; 180
      000077 8F                     219 	.db #0x8f	; 143
      000078 65                     220 	.db #0x65	; 101	'e'
      000079 A6                     221 	.db #0xa6	; 166
      00007A 78                     222 	.db #0x78	; 120	'x'
      00007B B7                     223 	.db #0xb7	; 183
      00007C 3E                     224 	.db #0x3e	; 62
      00007D 24                     225 	.db #0x24	; 36
      00007E BE                     226 	.db #0xbe	; 190
      00007F B3                     227 	.db #0xb3	; 179
      000080 AB                     228 	.db #0xab	; 171
      000081 2E                     229 	.db #0x2e	; 46
      000082 14                     230 	.db #0x14	; 20
      000083 F9                     231 	.db #0xf9	; 249
      000084 35                     232 	.db #0x35	; 53	'5'
      000085 C3                     233 	.db #0xc3	; 195
      000086 77                     234 	.db #0x77	; 119	'w'
      000087 31                     235 	.db #0x31	; 49	'1'
      000088 5C                     236 	.db #0x5c	; 92
      000089 96                     237 	.db #0x96	; 150
      00008A 1A                     238 	.db #0x1a	; 26
      00008B C7                     239 	.db #0xc7	; 199
      00008C 5E                     240 	.db #0x5e	; 94
      00008D E5                     241 	.db #0xe5	; 229
      00008E A2                     242 	.db #0xa2	; 162
      00008F 49                     243 	.db #0x49	; 73	'I'
      000090 06                     244 	.db #0x06	; 6
      000091 2F                     245 	.db #0x2f	; 47
      000092 FF                     246 	.db #0xff	; 255
      000093 BA                     247 	.db #0xba	; 186
      000094 24                     248 	.db #0x24	; 36
      000095 0F                     249 	.db #0x0f	; 15
      000096 3F                     250 	.db #0x3f	; 63
      000097 6C                     251 	.db #0x6c	; 108	'l'
      000098 5D                     252 	.db #0x5d	; 93
      000099 23                     253 	.db #0x23	; 35
      00009A 14                     254 	.db #0x14	; 20
      00009B C5                     255 	.db #0xc5	; 197
      00009C 54                     256 	.db #0x54	; 84	'T'
      00009D D8                     257 	.db #0xd8	; 216
      00009E 68                     258 	.db #0x68	; 104	'h'
      00009F 54                     259 	.db #0x54	; 84	'T'
      0000A0 01                     260 	.db #0x01	; 1
      0000A1 2B                     261 	.db #0x2b	; 43
      0000A2 C0                     262 	.db #0xc0	; 192
      0000A3 43                     263 	.db #0x43	; 67	'C'
      0000A4 A5                     264 	.db #0xa5	; 165
      0000A5 C1                     265 	.db #0xc1	; 193
      0000A6 56                     266 	.db #0x56	; 86	'V'
      0000A7 B4                     267 	.db #0xb4	; 180
      0000A8 8B                     268 	.db #0x8b	; 139
      0000A9 BB                     269 	.db #0xbb	; 187
      0000AA 0B                     270 	.db #0x0b	; 11
      0000AB 58                     271 	.db #0x58	; 88	'X'
      0000AC 00                     272 	.db #0x00	; 0
      0000AD 34                     273 	.db #0x34	; 52	'4'
      0000AE 44                     274 	.db #0x44	; 68	'D'
      0000AF 9E                     275 	.db #0x9e	; 158
      0000B0 92                     276 	.db #0x92	; 146
      0000B1 C1                     277 	.db #0xc1	; 193
      0000B2 10                     278 	.db #0x10	; 16
      0000B3 65                     279 	.db #0x65	; 101	'e'
      0000B4 93                     280 	.db #0x93	; 147
      0000B5 75                     281 	.db #0x75	; 117	'u'
      0000B6 87                     282 	.db #0x87	; 135
      0000B7 C1                     283 	.db #0xc1	; 193
      0000B8 91                     284 	.db #0x91	; 145
      0000B9 7B                     285 	.db #0x7b	; 123
      0000BA 09                     286 	.db #0x09	; 9
      0000BB 15                     287 	.db #0x15	; 21
      0000BC D2                     288 	.db #0xd2	; 210
      0000BD 85                     289 	.db #0x85	; 133
      0000BE D8                     290 	.db #0xd8	; 216
      0000BF A3                     291 	.db #0xa3	; 163
      0000C0 85                     292 	.db #0x85	; 133
      0000C1 B8                     293 	.db #0xb8	; 184
      0000C2 32                     294 	.db #0x32	; 50	'2'
      0000C3 C8                     295 	.db #0xc8	; 200
      0000C4 01                     296 	.db #0x01	; 1
      0000C5 3F                     297 	.db #0x3f	; 63
      0000C6 00                     298 	.db #0x00	; 0
      0000C7 61                     299 	.db #0x61	; 97	'a'
      0000C8 D4                     300 	.db #0xd4	; 212
      0000C9 F4                     301 	.db #0xf4	; 244
      0000CA 3D                     302 	.db #0x3d	; 61
      0000CB CA                     303 	.db #0xca	; 202
      0000CC D5                     304 	.db #0xd5	; 213
      0000CD 85                     305 	.db #0x85	; 133
      0000CE FF                     306 	.db #0xff	; 255
      0000CF 64                     307 	.db #0x64	; 100	'd'
      0000D0 51                     308 	.db #0x51	; 81	'Q'
      0000D1 8E                     309 	.db #0x8e	; 142
      0000D2 21                     310 	.db #0x21	; 33
      0000D3 B8                     311 	.db #0xb8	; 184
      0000D4 32                     312 	.db #0x32	; 50	'2'
      0000D5 A6                     313 	.db #0xa6	; 166
      0000D6 56                     314 	.db #0x56	; 86	'V'
      0000D7 B7                     315 	.db #0xb7	; 183
      0000D8 8F                     316 	.db #0x8f	; 143
      0000D9 45                     317 	.db #0x45	; 69	'E'
      0000DA 3A                     318 	.db #0x3a	; 58
      0000DB FF                     319 	.db #0xff	; 255
      0000DC 39                     320 	.db #0x39	; 57	'9'
      0000DD 33                     321 	.db #0x33	; 51	'3'
      0000DE FC                     322 	.db #0xfc	; 252
      0000DF 63                     323 	.db #0x63	; 99	'c'
      0000E0 B8                     324 	.db #0xb8	; 184
      0000E1 D5                     325 	.db #0xd5	; 213
      0000E2 CA                     326 	.db #0xca	; 202
      0000E3 C5                     327 	.db #0xc5	; 197
      0000E4 11                     328 	.db #0x11	; 17
      0000E5 35                     329 	.db #0x35	; 53	'5'
      0000E6 EE                     330 	.db #0xee	; 238
      0000E7 E2                     331 	.db #0xe2	; 226
      0000E8 65                     332 	.db #0x65	; 101	'e'
      0000E9 65                     333 	.db #0x65	; 101	'e'
      0000EA BD                     334 	.db #0xbd	; 189
      0000EB C8                     335 	.db #0xc8	; 200
      0000EC 31                     336 	.db #0x31	; 49	'1'
      0000ED 99                     337 	.db #0x99	; 153
      0000EE A1                     338 	.db #0xa1	; 161
      0000EF 04                     339 	.db #0x04	; 4
      0000F0 86                     340 	.db #0x86	; 134
      0000F1 FF                     341 	.db #0xff	; 255
      0000F2 90                     342 	.db #0x90	; 144
      0000F3 47                     343 	.db #0x47	; 71	'G'
      0000F4 3B                     344 	.db #0x3b	; 59
      0000F5 D0                     345 	.db #0xd0	; 208
      0000F6 5B                     346 	.db #0x5b	; 91
      0000F7 04                     347 	.db #0x04	; 4
      0000F8 BC                     348 	.db #0xbc	; 188
      0000F9 A9                     349 	.db #0xa9	; 169
      0000FA 8A                     350 	.db #0x8a	; 138
      0000FB 35                     351 	.db #0x35	; 53	'5'
      0000FC A3                     352 	.db #0xa3	; 163
      0000FD 2B                     353 	.db #0x2b	; 43
      0000FE B3                     354 	.db #0xb3	; 179
      0000FF 3C                     355 	.db #0x3c	; 60
      000100 3C                     356 	.db #0x3c	; 60
      000101 3D                     357 	.db #0x3d	; 61
      000102 CF                     358 	.db #0xcf	; 207
      000103 EB                     359 	.db #0xeb	; 235
      000104 73                     360 	.db #0x73	; 115	's'
      000105 B4                     361 	.db #0xb4	; 180
      000106 DD                     362 	.db #0xdd	; 221
      000107 B1                     363 	.db #0xb1	; 177
      000108 86                     364 	.db #0x86	; 134
      000109 65                     365 	.db #0x65	; 101	'e'
      00010A D2                     366 	.db #0xd2	; 210
      00010B 03                     367 	.db #0x03	; 3
      00010C AC                     368 	.db #0xac	; 172
      00010D 28                     369 	.db #0x28	; 40
      00010E 9B                     370 	.db #0x9b	; 155
      00010F 7F                     371 	.db #0x7f	; 127
      000110 B2                     372 	.db #0xb2	; 178
      000111 EC                     373 	.db #0xec	; 236
      000112 1B                     374 	.db #0x1b	; 27
      000113 D5                     375 	.db #0xd5	; 213
      000114 0A                     376 	.db #0x0a	; 10
      000115 18                     377 	.db #0x18	; 24
      000116 11                     378 	.db #0x11	; 17
      000117 CD                     379 	.db #0xcd	; 205
      000118 2E                     380 	.db #0x2e	; 46
      000119 4A                     381 	.db #0x4a	; 74	'J'
      00011A 9C                     382 	.db #0x9c	; 156
      00011B A0                     383 	.db #0xa0	; 160
      00011C 58                     384 	.db #0x58	; 88	'X'
      00011D 59                     385 	.db #0x59	; 89	'Y'
      00011E F8                     386 	.db #0xf8	; 248
      00011F 2B                     387 	.db #0x2b	; 43
      000120 38                     388 	.db #0x38	; 56	'8'
      000121 99                     389 	.db #0x99	; 153
      000122 53                     390 	.db #0x53	; 83	'S'
      000123 3C                     391 	.db #0x3c	; 60
      000124 B8                     392 	.db #0xb8	; 184
      000125 3C                     393 	.db #0x3c	; 60
      000126 99                     394 	.db #0x99	; 153
      000127 E5                     395 	.db #0xe5	; 229
      000128 6F                     396 	.db #0x6f	; 111	'o'
      000129 5C                     397 	.db #0x5c	; 92
      00012A 2B                     398 	.db #0x2b	; 43
      00012B 2D                     399 	.db #0x2d	; 45
      00012C E0                     400 	.db #0xe0	; 224
      00012D 06                     401 	.db #0x06	; 6
      00012E CA                     402 	.db #0xca	; 202
      00012F DE                     403 	.db #0xde	; 222
      000130 01                     404 	.db #0x01	; 1
      000131 3C                     405 	.db #0x3c	; 60
      000132 EB                     406 	.db #0xeb	; 235
      000133 91                     407 	.db #0x91	; 145
      000134 A4                     408 	.db #0xa4	; 164
      000135 28                     409 	.db #0x28	; 40
      000136 52                     410 	.db #0x52	; 82	'R'
      000137 B1                     411 	.db #0xb1	; 177
      000138 60                     412 	.db #0x60	; 96
      000139 56                     413 	.db #0x56	; 86	'V'
      00013A D3                     414 	.db #0xd3	; 211
      00013B AE                     415 	.db #0xae	; 174
      00013C 38                     416 	.db #0x38	; 56	'8'
      00013D 69                     417 	.db #0x69	; 105	'i'
      00013E 00                     418 	.db 0x00
                           00013F   419 	G$init_scroll$0$0	= .
                                    420 	.globl	G$init_scroll$0$0
                           00013F   421 	C$montylib.c$27$1_0$92	= .
                                    422 	.globl	C$montylib.c$27$1_0$92
                                    423 ;montylib.c:27: void init_scroll(void *scrolltable, void *metatiles, unsigned int scroll_x, unsigned int scroll_y) {
                                    424 ;	---------------------------------
                                    425 ; Function init_scroll
                                    426 ; ---------------------------------
      00013F                        427 _init_scroll::
                           00013F   428 	C$montylib.c$28$1_0$92	= .
                                    429 	.globl	C$montylib.c$28$1_0$92
                                    430 ;montylib.c:28: GSL_initializeMap(scrolltable, metatiles);
      00013F FD 21 04 00      [14]  431 	ld	iy, #4
      000143 FD 39            [15]  432 	add	iy, sp
      000145 FD 6E 00         [19]  433 	ld	l, 0 (iy)
      000148 FD 66 01         [19]  434 	ld	h, 1 (iy)
      00014B E5               [11]  435 	push	hl
      00014C FD 6E FE         [19]  436 	ld	l, -2 (iy)
      00014F FD 66 FF         [19]  437 	ld	h, -1 (iy)
      000152 E5               [11]  438 	push	hl
      000153 CDr00r00         [17]  439 	call	_GSL_initializeMap
      000156 F1               [10]  440 	pop	af
      000157 F1               [10]  441 	pop	af
                           000158   442 	C$montylib.c$29$1_0$92	= .
                                    443 	.globl	C$montylib.c$29$1_0$92
                                    444 ;montylib.c:29: GSL_positionWindow(scroll_x,scroll_y);
      000158 FD 21 08 00      [14]  445 	ld	iy, #8
      00015C FD 39            [15]  446 	add	iy, sp
      00015E FD 6E 00         [19]  447 	ld	l, 0 (iy)
      000161 FD 66 01         [19]  448 	ld	h, 1 (iy)
      000164 E5               [11]  449 	push	hl
      000165 FD 6E FE         [19]  450 	ld	l, -2 (iy)
      000168 FD 66 FF         [19]  451 	ld	h, -1 (iy)
      00016B E5               [11]  452 	push	hl
      00016C CDr00r00         [17]  453 	call	_GSL_positionWindow
      00016F F1               [10]  454 	pop	af
      000170 F1               [10]  455 	pop	af
                           000171   456 	C$montylib.c$30$1_0$92	= .
                                    457 	.globl	C$montylib.c$30$1_0$92
                                    458 ;montylib.c:30: GSL_refreshVDP();
                           000171   459 	C$montylib.c$31$1_0$92	= .
                                    460 	.globl	C$montylib.c$31$1_0$92
                                    461 ;montylib.c:31: }
                           000171   462 	C$montylib.c$31$1_0$92	= .
                                    463 	.globl	C$montylib.c$31$1_0$92
                           000171   464 	XG$init_scroll$0$0	= .
                                    465 	.globl	XG$init_scroll$0$0
      000171 C3r00r00         [10]  466 	jp	_GSL_refreshVDP
                           000174   467 	G$move_scroll$0$0	= .
                                    468 	.globl	G$move_scroll$0$0
                           000174   469 	C$montylib.c$33$1_0$94	= .
                                    470 	.globl	C$montylib.c$33$1_0$94
                                    471 ;montylib.c:33: void move_scroll(signed char delta_x, signed char delta_y) {
                                    472 ;	---------------------------------
                                    473 ; Function move_scroll
                                    474 ; ---------------------------------
      000174                        475 _move_scroll::
      000174 DD E5            [15]  476 	push	ix
      000176 DD 21 00 00      [14]  477 	ld	ix,#0
      00017A DD 39            [15]  478 	add	ix,sp
                           00017C   479 	C$montylib.c$34$1_0$94	= .
                                    480 	.globl	C$montylib.c$34$1_0$94
                                    481 ;montylib.c:34: signed int currentx = GSL_getCurrentX();
      00017C CDr00r00         [17]  482 	call	_GSL_getCurrentX
                           00017F   483 	C$montylib.c$35$1_0$94	= .
                                    484 	.globl	C$montylib.c$35$1_0$94
                                    485 ;montylib.c:35: signed int currenty = GSL_getCurrentY();
      00017F E5               [11]  486 	push	hl
      000180 CDr00r00         [17]  487 	call	_GSL_getCurrentY
      000183 D1               [10]  488 	pop	de
      000184 4D               [ 4]  489 	ld	c, l
      000185 44               [ 4]  490 	ld	b, h
                           000186   491 	C$montylib.c$36$1_0$94	= .
                                    492 	.globl	C$montylib.c$36$1_0$94
                                    493 ;montylib.c:36: if((currentx + delta_x) < 0) delta_x = 0;
      000186 DD 7E 04         [19]  494 	ld	a, 4 (ix)
      000189 6F               [ 4]  495 	ld	l, a
      00018A 17               [ 4]  496 	rla
      00018B 9F               [ 4]  497 	sbc	a, a
      00018C 67               [ 4]  498 	ld	h, a
      00018D 19               [11]  499 	add	hl, de
      00018E CB 7C            [ 8]  500 	bit	7, h
      000190 28 04            [12]  501 	jr	Z, 00102$
      000192 DD 36 04 00      [19]  502 	ld	4 (ix), #0
      000196                        503 00102$:
                           000196   504 	C$montylib.c$37$1_0$94	= .
                                    505 	.globl	C$montylib.c$37$1_0$94
                                    506 ;montylib.c:37: if((currentx + delta_x) > (GSL_getMapWidthInPixels() - 256)) delta_x = 0;
      000196 DD 7E 04         [19]  507 	ld	a, 4 (ix)
      000199 6F               [ 4]  508 	ld	l, a
      00019A 17               [ 4]  509 	rla
      00019B 9F               [ 4]  510 	sbc	a, a
      00019C 67               [ 4]  511 	ld	h, a
      00019D 19               [11]  512 	add	hl, de
      00019E C5               [11]  513 	push	bc
      00019F E5               [11]  514 	push	hl
      0001A0 CDr00r00         [17]  515 	call	_GSL_getMapWidthInPixels
      0001A3 D1               [10]  516 	pop	de
      0001A4 C1               [10]  517 	pop	bc
      0001A5 7C               [ 4]  518 	ld	a,h
      0001A6 C6 FF            [ 7]  519 	add	a,#0xff
      0001A8 67               [ 4]  520 	ld	h, a
      0001A9 AF               [ 4]  521 	xor	a, a
      0001AA ED 52            [15]  522 	sbc	hl, de
      0001AC 30 04            [12]  523 	jr	NC, 00104$
      0001AE DD 36 04 00      [19]  524 	ld	4 (ix), #0
      0001B2                        525 00104$:
                           0001B2   526 	C$montylib.c$38$1_0$94	= .
                                    527 	.globl	C$montylib.c$38$1_0$94
                                    528 ;montylib.c:38: if((currenty + delta_y) < 0) delta_y = 0;
      0001B2 DD 7E 05         [19]  529 	ld	a, 5 (ix)
      0001B5 6F               [ 4]  530 	ld	l, a
      0001B6 17               [ 4]  531 	rla
      0001B7 9F               [ 4]  532 	sbc	a, a
      0001B8 67               [ 4]  533 	ld	h, a
      0001B9 09               [11]  534 	add	hl, bc
      0001BA CB 7C            [ 8]  535 	bit	7, h
      0001BC 28 04            [12]  536 	jr	Z, 00106$
      0001BE DD 36 05 00      [19]  537 	ld	5 (ix), #0
      0001C2                        538 00106$:
                           0001C2   539 	C$montylib.c$39$1_0$94	= .
                                    540 	.globl	C$montylib.c$39$1_0$94
                                    541 ;montylib.c:39: if((currenty + delta_y) > (GSL_getMapHeightInPixels() - 192)) delta_y = 0;
      0001C2 DD 7E 05         [19]  542 	ld	a, 5 (ix)
      0001C5 6F               [ 4]  543 	ld	l, a
      0001C6 17               [ 4]  544 	rla
      0001C7 9F               [ 4]  545 	sbc	a, a
      0001C8 67               [ 4]  546 	ld	h, a
      0001C9 09               [11]  547 	add	hl, bc
      0001CA E5               [11]  548 	push	hl
      0001CB CDr00r00         [17]  549 	call	_GSL_getMapHeightInPixels
      0001CE D1               [10]  550 	pop	de
      0001CF 7D               [ 4]  551 	ld	a, l
      0001D0 C6 40            [ 7]  552 	add	a, #0x40
      0001D2 6F               [ 4]  553 	ld	l, a
      0001D3 7C               [ 4]  554 	ld	a, h
      0001D4 CE FF            [ 7]  555 	adc	a, #0xff
      0001D6 67               [ 4]  556 	ld	h, a
      0001D7 AF               [ 4]  557 	xor	a, a
      0001D8 ED 52            [15]  558 	sbc	hl, de
      0001DA 30 04            [12]  559 	jr	NC, 00108$
      0001DC DD 36 05 00      [19]  560 	ld	5 (ix), #0
      0001E0                        561 00108$:
                           0001E0   562 	C$montylib.c$41$1_0$94	= .
                                    563 	.globl	C$montylib.c$41$1_0$94
                                    564 ;montylib.c:41: GSL_scroll(delta_x,delta_y);
      0001E0 DD 66 05         [19]  565 	ld	h, 5 (ix)
      0001E3 DD 6E 04         [19]  566 	ld	l, 4 (ix)
      0001E6 E5               [11]  567 	push	hl
      0001E7 CDr00r00         [17]  568 	call	_GSL_scroll
      0001EA F1               [10]  569 	pop	af
                           0001EB   570 	C$montylib.c$42$1_0$94	= .
                                    571 	.globl	C$montylib.c$42$1_0$94
                                    572 ;montylib.c:42: }
      0001EB DD E1            [14]  573 	pop	ix
                           0001ED   574 	C$montylib.c$42$1_0$94	= .
                                    575 	.globl	C$montylib.c$42$1_0$94
                           0001ED   576 	XG$move_scroll$0$0	= .
                                    577 	.globl	XG$move_scroll$0$0
      0001ED C9               [10]  578 	ret
                           0001EE   579 	G$get_scroll_x$0$0	= .
                                    580 	.globl	G$get_scroll_x$0$0
                           0001EE   581 	C$montylib.c$44$1_0$95	= .
                                    582 	.globl	C$montylib.c$44$1_0$95
                                    583 ;montylib.c:44: unsigned int get_scroll_x() {
                                    584 ;	---------------------------------
                                    585 ; Function get_scroll_x
                                    586 ; ---------------------------------
      0001EE                        587 _get_scroll_x::
                           0001EE   588 	C$montylib.c$45$1_0$95	= .
                                    589 	.globl	C$montylib.c$45$1_0$95
                                    590 ;montylib.c:45: return GSL_getCurrentX();
                           0001EE   591 	C$montylib.c$46$1_0$95	= .
                                    592 	.globl	C$montylib.c$46$1_0$95
                                    593 ;montylib.c:46: }
                           0001EE   594 	C$montylib.c$46$1_0$95	= .
                                    595 	.globl	C$montylib.c$46$1_0$95
                           0001EE   596 	XG$get_scroll_x$0$0	= .
                                    597 	.globl	XG$get_scroll_x$0$0
      0001EE C3r00r00         [10]  598 	jp	_GSL_getCurrentX
                           0001F1   599 	G$get_scroll_y$0$0	= .
                                    600 	.globl	G$get_scroll_y$0$0
                           0001F1   601 	C$montylib.c$48$1_0$96	= .
                                    602 	.globl	C$montylib.c$48$1_0$96
                                    603 ;montylib.c:48: unsigned int get_scroll_y() {
                                    604 ;	---------------------------------
                                    605 ; Function get_scroll_y
                                    606 ; ---------------------------------
      0001F1                        607 _get_scroll_y::
                           0001F1   608 	C$montylib.c$49$1_0$96	= .
                                    609 	.globl	C$montylib.c$49$1_0$96
                                    610 ;montylib.c:49: return GSL_getCurrentY();
                           0001F1   611 	C$montylib.c$50$1_0$96	= .
                                    612 	.globl	C$montylib.c$50$1_0$96
                                    613 ;montylib.c:50: }
                           0001F1   614 	C$montylib.c$50$1_0$96	= .
                                    615 	.globl	C$montylib.c$50$1_0$96
                           0001F1   616 	XG$get_scroll_y$0$0	= .
                                    617 	.globl	XG$get_scroll_y$0$0
      0001F1 C3r00r00         [10]  618 	jp	_GSL_getCurrentY
                           0001F4   619 	G$waitForFrame$0$0	= .
                                    620 	.globl	G$waitForFrame$0$0
                           0001F4   621 	C$montylib.c$52$1_0$97	= .
                                    622 	.globl	C$montylib.c$52$1_0$97
                                    623 ;montylib.c:52: void waitForFrame(){
                                    624 ;	---------------------------------
                                    625 ; Function waitForFrame
                                    626 ; ---------------------------------
      0001F4                        627 _waitForFrame::
                           0001F4   628 	C$montylib.c$53$1_0$97	= .
                                    629 	.globl	C$montylib.c$53$1_0$97
                                    630 ;montylib.c:53: if(!pause) {
      0001F4 21r00r00         [10]  631 	ld	hl, #_pause
      0001F7 CB 46            [12]  632 	bit	0, (hl)
      0001F9 20 03            [12]  633 	jr	NZ, 00102$
                           0001FB   634 	C$montylib.c$54$2_0$98	= .
                                    635 	.globl	C$montylib.c$54$2_0$98
                                    636 ;montylib.c:54: manage_sound_frame();
      0001FB CDr00r00         [17]  637 	call	_manage_sound_frame
      0001FE                        638 00102$:
                           0001FE   639 	C$montylib.c$56$1_0$97	= .
                                    640 	.globl	C$montylib.c$56$1_0$97
                                    641 ;montylib.c:56: SMS_waitForVBlank();
      0001FE CDr00r00         [17]  642 	call	_SMS_waitForVBlank
                           000201   643 	C$montylib.c$57$1_0$97	= .
                                    644 	.globl	C$montylib.c$57$1_0$97
                                    645 ;montylib.c:57: GSL_VBlank();
      000201 CDr00r00         [17]  646 	call	_GSL_VBlank
                           000204   647 	C$montylib.c$58$1_0$97	= .
                                    648 	.globl	C$montylib.c$58$1_0$97
                                    649 ;montylib.c:58: SMS_copySpritestoSAT();
                           000204   650 	C$montylib.c$59$1_0$97	= .
                                    651 	.globl	C$montylib.c$59$1_0$97
                                    652 ;montylib.c:59: }
                           000204   653 	C$montylib.c$59$1_0$97	= .
                                    654 	.globl	C$montylib.c$59$1_0$97
                           000204   655 	XG$waitForFrame$0$0	= .
                                    656 	.globl	XG$waitForFrame$0$0
      000204 C3r00r00         [10]  657 	jp	_SMS_copySpritestoSAT
                           000207   658 	G$rand$0$0	= .
                                    659 	.globl	G$rand$0$0
                           000207   660 	C$montylib.c$61$1_0$99	= .
                                    661 	.globl	C$montylib.c$61$1_0$99
                                    662 ;montylib.c:61: unsigned char rand() {
                                    663 ;	---------------------------------
                                    664 ; Function rand
                                    665 ; ---------------------------------
      000207                        666 _rand::
                           000207   667 	C$montylib.c$63$1_0$99	= .
                                    668 	.globl	C$montylib.c$63$1_0$99
                                    669 ;montylib.c:63: return randLUT[rand_index++];
      000207 FD 21r00r00      [14]  670 	ld	iy, #_rand_index
      00020B FD 4E 00         [19]  671 	ld	c, 0 (iy)
      00020E FD 34 00         [23]  672 	inc	0 (iy)
      000211 21r3Fr00         [10]  673 	ld	hl, #_randLUT
      000214 06 00            [ 7]  674 	ld	b, #0x00
      000216 09               [11]  675 	add	hl, bc
      000217 6E               [ 7]  676 	ld	l, (hl)
                           000218   677 	C$montylib.c$64$1_0$99	= .
                                    678 	.globl	C$montylib.c$64$1_0$99
                                    679 ;montylib.c:64: }
                           000218   680 	C$montylib.c$64$1_0$99	= .
                                    681 	.globl	C$montylib.c$64$1_0$99
                           000218   682 	XG$rand$0$0	= .
                                    683 	.globl	XG$rand$0$0
      000218 C9               [10]  684 	ret
                                    685 	.area _CODE
                                    686 	.area _INITIALIZER
                           000000   687 Fmontylib$__xinit_rand_index$0_0$0 == .
      000000                        688 __xinit__rand_index:
      000000 00                     689 	.db #0x00	; 0
                                    690 	.area _CABS (ABS)
