                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module func_screen
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _devkit_RGB
                                     12 	.globl _devkit_SMS_setSpritePaletteColor
                                     13 	.globl _devkit_SMS_displayOff
                                     14 	.globl _devkit_SMS_displayOn
                                     15 	.globl _engine_font_manager_text
                                     16 	.globl _screen_func_screen_load
                                     17 	.globl _screen_func_screen_update
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                           000000    49 	G$screen_func_screen_load$0$0	= .
                                     50 	.globl	G$screen_func_screen_load$0$0
                           000000    51 	C$func_screen.c$6$0_0$87	= .
                                     52 	.globl	C$func_screen.c$6$0_0$87
                                     53 ;func_screen.c:6: void screen_func_screen_load()
                                     54 ;	---------------------------------
                                     55 ; Function screen_func_screen_load
                                     56 ; ---------------------------------
      000000                         57 _screen_func_screen_load::
                           000000    58 	C$func_screen.c$9$1_0$87	= .
                                     59 	.globl	C$func_screen.c$9$1_0$87
                                     60 ;func_screen.c:9: devkit_SMS_displayOff();
      000000 CDr00r00         [17]   61 	call	_devkit_SMS_displayOff
                           000003    62 	C$func_screen.c$10$1_0$87	= .
                                     63 	.globl	C$func_screen.c$10$1_0$87
                                     64 ;func_screen.c:10: devkit_SMS_setSpritePaletteColor( 0, devkit_RGB( 0, 0, 3 ) );
      000003 3E 03            [ 7]   65 	ld	a, #0x03
      000005 F5               [11]   66 	push	af
      000006 33               [ 6]   67 	inc	sp
      000007 AF               [ 4]   68 	xor	a, a
      000008 F5               [11]   69 	push	af
      000009 33               [ 6]   70 	inc	sp
      00000A AF               [ 4]   71 	xor	a, a
      00000B F5               [11]   72 	push	af
      00000C 33               [ 6]   73 	inc	sp
      00000D CDr00r00         [17]   74 	call	_devkit_RGB
      000010 F1               [10]   75 	pop	af
      000011 7D               [ 4]   76 	ld	a, l
      000012 33               [ 6]   77 	inc	sp
      000013 F5               [11]   78 	push	af
      000014 33               [ 6]   79 	inc	sp
      000015 AF               [ 4]   80 	xor	a, a
      000016 F5               [11]   81 	push	af
      000017 33               [ 6]   82 	inc	sp
      000018 CDr00r00         [17]   83 	call	_devkit_SMS_setSpritePaletteColor
      00001B F1               [10]   84 	pop	af
                           00001C    85 	C$func_screen.c$11$1_0$87	= .
                                     86 	.globl	C$func_screen.c$11$1_0$87
                                     87 ;func_screen.c:11: engine_font_manager_text( "FUNC SCREEN", 1, 5 );
      00001C 11 01 05         [10]   88 	ld	de, #0x0501
      00001F D5               [11]   89 	push	de
      000020 21r2Cr00         [10]   90 	ld	hl, #___str_0
      000023 E5               [11]   91 	push	hl
      000024 CDr00r00         [17]   92 	call	_engine_font_manager_text
      000027 F1               [10]   93 	pop	af
      000028 F1               [10]   94 	pop	af
                           000029    95 	C$func_screen.c$12$1_0$87	= .
                                     96 	.globl	C$func_screen.c$12$1_0$87
                                     97 ;func_screen.c:12: devkit_SMS_displayOn();
                           000029    98 	C$func_screen.c$13$1_0$87	= .
                                     99 	.globl	C$func_screen.c$13$1_0$87
                                    100 ;func_screen.c:13: }
                           000029   101 	C$func_screen.c$13$1_0$87	= .
                                    102 	.globl	C$func_screen.c$13$1_0$87
                           000029   103 	XG$screen_func_screen_load$0$0	= .
                                    104 	.globl	XG$screen_func_screen_load$0$0
      000029 C3r00r00         [10]  105 	jp	_devkit_SMS_displayOn
                           00002C   106 Ffunc_screen$__str_0$0_0$0 == .
      00002C                        107 ___str_0:
      00002C 46 55 4E 43 20 53 43   108 	.ascii "FUNC SCREEN"
             52 45 45 4E
      000037 00                     109 	.db 0x00
                           000038   110 	G$screen_func_screen_update$0$0	= .
                                    111 	.globl	G$screen_func_screen_update$0$0
                           000038   112 	C$func_screen.c$15$1_0$89	= .
                                    113 	.globl	C$func_screen.c$15$1_0$89
                                    114 ;func_screen.c:15: void screen_func_screen_update( unsigned char *screen_type )
                                    115 ;	---------------------------------
                                    116 ; Function screen_func_screen_update
                                    117 ; ---------------------------------
      000038                        118 _screen_func_screen_update::
                           000038   119 	C$func_screen.c$17$1_0$89	= .
                                    120 	.globl	C$func_screen.c$17$1_0$89
                                    121 ;func_screen.c:17: *screen_type = screen_type_func;
      000038 C1               [10]  122 	pop	bc
      000039 E1               [10]  123 	pop	hl
      00003A E5               [11]  124 	push	hl
      00003B C5               [11]  125 	push	bc
      00003C 36 17            [10]  126 	ld	(hl), #0x17
                           00003E   127 	C$func_screen.c$18$1_0$89	= .
                                    128 	.globl	C$func_screen.c$18$1_0$89
                                    129 ;func_screen.c:18: }
                           00003E   130 	C$func_screen.c$18$1_0$89	= .
                                    131 	.globl	C$func_screen.c$18$1_0$89
                           00003E   132 	XG$screen_func_screen_update$0$0	= .
                                    133 	.globl	XG$screen_func_screen_update$0$0
      00003E C9               [10]  134 	ret
                                    135 	.area _CODE
                                    136 	.area _INITIALIZER
                                    137 	.area _CABS (ABS)
