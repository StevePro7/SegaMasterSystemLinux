                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module test_screen
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _devkit_SMS_mapROMBank
                                     12 	.globl _devkit_SMS_displayOff
                                     13 	.globl _devkit_SMS_displayOn
                                     14 	.globl _engine_input_manager_hold
                                     15 	.globl _engine_font_manager_text
                                     16 	.globl _engine_content_manager_load_level1_assets
                                     17 	.globl _screen_test_screen_load
                                     18 	.globl _screen_test_screen_update
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _GSINIT
                                     39 	.area _GSFINAL
                                     40 	.area _GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                           000000    50 	G$screen_test_screen_load$0$0	= .
                                     51 	.globl	G$screen_test_screen_load$0$0
                           000000    52 	C$test_screen.c$18$0_0$102	= .
                                     53 	.globl	C$test_screen.c$18$0_0$102
                                     54 ;test_screen.c:18: void screen_test_screen_load()
                                     55 ;	---------------------------------
                                     56 ; Function screen_test_screen_load
                                     57 ; ---------------------------------
      000000                         58 _screen_test_screen_load::
                           000000    59 	C$test_screen.c$20$1_0$102	= .
                                     60 	.globl	C$test_screen.c$20$1_0$102
                                     61 ;test_screen.c:20: devkit_SMS_displayOff();
      000000 CDr00r00         [17]   62 	call	_devkit_SMS_displayOff
                           000003    63 	C$test_screen.c$23$1_0$102	= .
                                     64 	.globl	C$test_screen.c$23$1_0$102
                                     65 ;test_screen.c:23: engine_content_manager_load_level1_assets();
      000003 CDr00r00         [17]   66 	call	_engine_content_manager_load_level1_assets
                           000006    67 	C$test_screen.c$24$1_0$102	= .
                                     68 	.globl	C$test_screen.c$24$1_0$102
                                     69 ;test_screen.c:24: devkit_SMS_displayOn();
                           000006    70 	C$test_screen.c$25$1_0$102	= .
                                     71 	.globl	C$test_screen.c$25$1_0$102
                                     72 ;test_screen.c:25: }
                           000006    73 	C$test_screen.c$25$1_0$102	= .
                                     74 	.globl	C$test_screen.c$25$1_0$102
                           000006    75 	XG$screen_test_screen_load$0$0	= .
                                     76 	.globl	XG$screen_test_screen_load$0$0
      000006 C3r00r00         [10]   77 	jp	_devkit_SMS_displayOn
                           000009    78 	G$screen_test_screen_update$0$0	= .
                                     79 	.globl	G$screen_test_screen_update$0$0
                           000009    80 	C$test_screen.c$27$1_0$104	= .
                                     81 	.globl	C$test_screen.c$27$1_0$104
                                     82 ;test_screen.c:27: void screen_test_screen_update( unsigned char *screen_type )
                                     83 ;	---------------------------------
                                     84 ; Function screen_test_screen_update
                                     85 ; ---------------------------------
      000009                         86 _screen_test_screen_update::
                           000009    87 	C$test_screen.c$29$1_0$104	= .
                                     88 	.globl	C$test_screen.c$29$1_0$104
                                     89 ;test_screen.c:29: unsigned char input = engine_input_manager_hold(1);
      000009 3E 01            [ 7]   90 	ld	a, #0x01
      00000B F5               [11]   91 	push	af
      00000C 33               [ 6]   92 	inc	sp
      00000D CDr00r00         [17]   93 	call	_engine_input_manager_hold
      000010 7D               [ 4]   94 	ld	a, l
      000011 33               [ 6]   95 	inc	sp
                           000012    96 	C$test_screen.c$30$1_0$104	= .
                                     97 	.globl	C$test_screen.c$30$1_0$104
                                     98 ;test_screen.c:30: if( input )
      000012 B7               [ 4]   99 	or	a, a
      000013 28 14            [12]  100 	jr	Z, 00102$
                           000015   101 	C$test_screen.c$32$2_0$105	= .
                                    102 	.globl	C$test_screen.c$32$2_0$105
                                    103 ;test_screen.c:32: engine_font_manager_text( "TEST SCREEN", 11, 7 );
      000015 11 0B 07         [10]  104 	ld	de, #0x070b
      000018 D5               [11]  105 	push	de
      000019 21r30r00         [10]  106 	ld	hl, #___str_0
      00001C E5               [11]  107 	push	hl
      00001D CDr00r00         [17]  108 	call	_engine_font_manager_text
      000020 F1               [10]  109 	pop	af
                           000021   110 	C$test_screen.c$33$2_0$105	= .
                                    111 	.globl	C$test_screen.c$33$2_0$105
                                    112 ;test_screen.c:33: devkit_SMS_mapROMBank( level1music_psg_bank );
      000021 26 04            [ 7]  113 	ld	h,#0x04
      000023 E3               [19]  114 	ex	(sp),hl
      000024 33               [ 6]  115 	inc	sp
      000025 CDr00r00         [17]  116 	call	_devkit_SMS_mapROMBank
      000028 33               [ 6]  117 	inc	sp
      000029                        118 00102$:
                           000029   119 	C$test_screen.c$38$1_0$104	= .
                                    120 	.globl	C$test_screen.c$38$1_0$104
                                    121 ;test_screen.c:38: *screen_type = screen_type_test;
      000029 C1               [10]  122 	pop	bc
      00002A E1               [10]  123 	pop	hl
      00002B E5               [11]  124 	push	hl
      00002C C5               [11]  125 	push	bc
      00002D 36 16            [10]  126 	ld	(hl), #0x16
                           00002F   127 	C$test_screen.c$39$1_0$104	= .
                                    128 	.globl	C$test_screen.c$39$1_0$104
                                    129 ;test_screen.c:39: }
                           00002F   130 	C$test_screen.c$39$1_0$104	= .
                                    131 	.globl	C$test_screen.c$39$1_0$104
                           00002F   132 	XG$screen_test_screen_update$0$0	= .
                                    133 	.globl	XG$screen_test_screen_update$0$0
      00002F C9               [10]  134 	ret
                           000030   135 Ftest_screen$__str_0$0_0$0 == .
      000030                        136 ___str_0:
      000030 54 45 53 54 20 53 43   137 	.ascii "TEST SCREEN"
             52 45 45 4E
      00003B 00                     138 	.db 0x00
                                    139 	.area _CODE
                                    140 	.area _INITIALIZER
                                    141 	.area _CABS (ABS)
