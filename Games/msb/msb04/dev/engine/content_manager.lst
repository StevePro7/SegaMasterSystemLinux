                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module content_manager
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _devkit_SMS_loadBGPalette
                                     12 	.globl _devkit_SMS_loadPSGaidencompressedTiles
                                     13 	.globl _devkit_SMS_mapROMBank
                                     14 	.globl _engine_content_manager_bggame
                                     15 	.globl _engine_content_manager_splash
                                     16 	.globl _engine_content_manager_titles
                                     17 	.globl _engine_content_manager_sprite
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                           000000    49 	G$engine_content_manager_bggame$0$0	= .
                                     50 	.globl	G$engine_content_manager_bggame$0$0
                           000000    51 	C$content_manager.c$11$0_0$84	= .
                                     52 	.globl	C$content_manager.c$11$0_0$84
                                     53 ;content_manager.c:11: void engine_content_manager_bggame()
                                     54 ;	---------------------------------
                                     55 ; Function engine_content_manager_bggame
                                     56 ; ---------------------------------
      000000                         57 _engine_content_manager_bggame::
                           000000    58 	C$content_manager.c$14$0_0$84	= .
                                     59 	.globl	C$content_manager.c$14$0_0$84
                                     60 ;content_manager.c:14: }
                           000000    61 	C$content_manager.c$14$0_0$84	= .
                                     62 	.globl	C$content_manager.c$14$0_0$84
                           000000    63 	XG$engine_content_manager_bggame$0$0	= .
                                     64 	.globl	XG$engine_content_manager_bggame$0$0
      000000 C9               [10]   65 	ret
                           000001    66 	G$engine_content_manager_splash$0$0	= .
                                     67 	.globl	G$engine_content_manager_splash$0$0
                           000001    68 	C$content_manager.c$16$0_0$86	= .
                                     69 	.globl	C$content_manager.c$16$0_0$86
                                     70 ;content_manager.c:16: void engine_content_manager_splash()
                                     71 ;	---------------------------------
                                     72 ; Function engine_content_manager_splash
                                     73 ; ---------------------------------
      000001                         74 _engine_content_manager_splash::
                           000001    75 	C$content_manager.c$19$0_0$86	= .
                                     76 	.globl	C$content_manager.c$19$0_0$86
                                     77 ;content_manager.c:19: }
                           000001    78 	C$content_manager.c$19$0_0$86	= .
                                     79 	.globl	C$content_manager.c$19$0_0$86
                           000001    80 	XG$engine_content_manager_splash$0$0	= .
                                     81 	.globl	XG$engine_content_manager_splash$0$0
      000001 C9               [10]   82 	ret
                           000002    83 	G$engine_content_manager_titles$0$0	= .
                                     84 	.globl	G$engine_content_manager_titles$0$0
                           000002    85 	C$content_manager.c$21$0_0$88	= .
                                     86 	.globl	C$content_manager.c$21$0_0$88
                                     87 ;content_manager.c:21: void engine_content_manager_titles()
                                     88 ;	---------------------------------
                                     89 ; Function engine_content_manager_titles
                                     90 ; ---------------------------------
      000002                         91 _engine_content_manager_titles::
                           000002    92 	C$content_manager.c$24$0_0$88	= .
                                     93 	.globl	C$content_manager.c$24$0_0$88
                                     94 ;content_manager.c:24: }
                           000002    95 	C$content_manager.c$24$0_0$88	= .
                                     96 	.globl	C$content_manager.c$24$0_0$88
                           000002    97 	XG$engine_content_manager_titles$0$0	= .
                                     98 	.globl	XG$engine_content_manager_titles$0$0
      000002 C9               [10]   99 	ret
                           000003   100 	G$engine_content_manager_sprite$0$0	= .
                                    101 	.globl	G$engine_content_manager_sprite$0$0
                           000003   102 	C$content_manager.c$26$0_0$90	= .
                                    103 	.globl	C$content_manager.c$26$0_0$90
                                    104 ;content_manager.c:26: void engine_content_manager_sprite()
                                    105 ;	---------------------------------
                                    106 ; Function engine_content_manager_sprite
                                    107 ; ---------------------------------
      000003                        108 _engine_content_manager_sprite::
                           000003   109 	C$content_manager.c$32$0_0$90	= .
                                    110 	.globl	C$content_manager.c$32$0_0$90
                                    111 ;content_manager.c:32: }
                           000003   112 	C$content_manager.c$32$0_0$90	= .
                                    113 	.globl	C$content_manager.c$32$0_0$90
                           000003   114 	XG$engine_content_manager_sprite$0$0	= .
                                    115 	.globl	XG$engine_content_manager_sprite$0$0
      000003 C9               [10]  116 	ret
                           000004   117 	Fcontent_manager$load_tile$0$0	= .
                                    118 	.globl	Fcontent_manager$load_tile$0$0
                           000004   119 	C$content_manager.c$34$0_0$92	= .
                                    120 	.globl	C$content_manager.c$34$0_0$92
                                    121 ;content_manager.c:34: static void load_tile( unsigned char bank, const unsigned char *tiles, unsigned char tilefrom, const unsigned char *palette )
                                    122 ;	---------------------------------
                                    123 ; Function load_tile
                                    124 ; ---------------------------------
      000004                        125 _load_tile:
                           000004   126 	C$content_manager.c$36$1_0$92	= .
                                    127 	.globl	C$content_manager.c$36$1_0$92
                                    128 ;content_manager.c:36: devkit_SMS_mapROMBank( bank );
      000004 21 02 00         [10]  129 	ld	hl, #2
      000007 39               [11]  130 	add	hl, sp
      000008 7E               [ 7]  131 	ld	a, (hl)
      000009 F5               [11]  132 	push	af
      00000A 33               [ 6]  133 	inc	sp
      00000B CDr00r00         [17]  134 	call	_devkit_SMS_mapROMBank
      00000E 33               [ 6]  135 	inc	sp
                           00000F   136 	C$content_manager.c$37$1_0$92	= .
                                    137 	.globl	C$content_manager.c$37$1_0$92
                                    138 ;content_manager.c:37: devkit_SMS_loadPSGaidencompressedTiles( tiles, tilefrom );
      00000F FD 21 05 00      [14]  139 	ld	iy, #5
      000013 FD 39            [15]  140 	add	iy, sp
      000015 FD 5E 00         [19]  141 	ld	e, 0 (iy)
      000018 16 00            [ 7]  142 	ld	d, #0x00
      00001A FD 4E FE         [19]  143 	ld	c, -2 (iy)
      00001D FD 46 FF         [19]  144 	ld	b, -1 (iy)
      000020 D5               [11]  145 	push	de
      000021 C5               [11]  146 	push	bc
      000022 CDr00r00         [17]  147 	call	_devkit_SMS_loadPSGaidencompressedTiles
      000025 F1               [10]  148 	pop	af
      000026 F1               [10]  149 	pop	af
                           000027   150 	C$content_manager.c$38$1_0$92	= .
                                    151 	.globl	C$content_manager.c$38$1_0$92
                                    152 ;content_manager.c:38: devkit_SMS_loadBGPalette( ( void * ) palette );
      000027 21 06 00         [10]  153 	ld	hl, #6
      00002A 39               [11]  154 	add	hl, sp
      00002B 4E               [ 7]  155 	ld	c, (hl)
      00002C 23               [ 6]  156 	inc	hl
      00002D 46               [ 7]  157 	ld	b, (hl)
      00002E C5               [11]  158 	push	bc
      00002F CDr00r00         [17]  159 	call	_devkit_SMS_loadBGPalette
      000032 F1               [10]  160 	pop	af
                           000033   161 	C$content_manager.c$39$1_0$92	= .
                                    162 	.globl	C$content_manager.c$39$1_0$92
                                    163 ;content_manager.c:39: }
                           000033   164 	C$content_manager.c$39$1_0$92	= .
                                    165 	.globl	C$content_manager.c$39$1_0$92
                           000033   166 	XFcontent_manager$load_tile$0$0	= .
                                    167 	.globl	XFcontent_manager$load_tile$0$0
      000033 C9               [10]  168 	ret
                                    169 	.area _CODE
                                    170 	.area _INITIALIZER
                                    171 	.area _CABS (ABS)
