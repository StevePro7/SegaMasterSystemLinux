                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module montylib
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _devkit_GSL_getCurrentY
                                     12 	.globl _devkit_GSL_getCurrentX
                                     13 	.globl _devkit_GSL_getMapHeightInPixels
                                     14 	.globl _devkit_GSL_getMapWidthInPixels
                                     15 	.globl _devkit_GSL_VBlank
                                     16 	.globl _devkit_GSL_scroll
                                     17 	.globl _devkit_GSL_refreshVDP
                                     18 	.globl _devkit_GSL_positionWindow
                                     19 	.globl _devkit_GSL_initializeMap
                                     20 	.globl _devkit_SMS_VRAMmemset
                                     21 	.globl _devkit_SMS_copySpritestoSAT
                                     22 	.globl _devkit_SMS_waitForVBlank
                                     23 	.globl _devkit_SPRITEMODE_NORMAL
                                     24 	.globl _devkit_SMS_setSpriteMode
                                     25 	.globl _devkit_SMS_setBackdropColor
                                     26 	.globl _devkit_SMS_displayOn
                                     27 	.globl _devkit_VDPFEATURE_LEFTCOLBLANK
                                     28 	.globl _devkit_SMS_VDPturnOnFeature
                                     29 	.globl _devkit_SMS_init
                                     30 	.globl _manage_sound_frame
                                     31 	.globl _rand_index
                                     32 	.globl _frame_cnt
                                     33 	.globl _pause
                                     34 	.globl _randLUT
                                     35 	.globl _init_console
                                     36 	.globl _init_scroll
                                     37 	.globl _move_scroll
                                     38 	.globl _get_scroll_x
                                     39 	.globl _get_scroll_y
                                     40 	.globl _waitForFrame
                                     41 	.globl _rand
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
                           000000    49 G$pause$0_0$0==.
      000000                         50 _pause::
      000000                         51 	.ds 1
                           000001    52 G$frame_cnt$0_0$0==.
      000001                         53 _frame_cnt::
      000001                         54 	.ds 2
                                     55 ;--------------------------------------------------------
                                     56 ; ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _INITIALIZED
                           000000    59 G$rand_index$0_0$0==.
      000000                         60 _rand_index::
      000000                         61 	.ds 1
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area _DABS (ABS)
                                     66 ;--------------------------------------------------------
                                     67 ; global & static initialisations
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _GSINIT
                                     71 	.area _GSFINAL
                                     72 	.area _GSINIT
                                     73 ;--------------------------------------------------------
                                     74 ; Home
                                     75 ;--------------------------------------------------------
                                     76 	.area _HOME
                                     77 	.area _HOME
                                     78 ;--------------------------------------------------------
                                     79 ; code
                                     80 ;--------------------------------------------------------
                                     81 	.area _CODE
                           000000    82 	G$init_console$0$0	= .
                                     83 	.globl	G$init_console$0$0
                           000000    84 	C$montylib.c$16$0_0$103	= .
                                     85 	.globl	C$montylib.c$16$0_0$103
                                     86 ;montylib.c:16: void init_console()
                                     87 ;	---------------------------------
                                     88 ; Function init_console
                                     89 ; ---------------------------------
      000000                         90 _init_console::
                           000000    91 	C$montylib.c$18$1_0$103	= .
                                     92 	.globl	C$montylib.c$18$1_0$103
                                     93 ;montylib.c:18: devkit_SMS_init();
      000000 CDr00r00         [17]   94 	call	_devkit_SMS_init
                           000003    95 	C$montylib.c$19$1_0$103	= .
                                     96 	.globl	C$montylib.c$19$1_0$103
                                     97 ;montylib.c:19: devkit_SMS_VRAMmemset(0x4000, 0x00, 0x4000);
      000003 21 00 40         [10]   98 	ld	hl, #0x4000
      000006 E5               [11]   99 	push	hl
      000007 AF               [ 4]  100 	xor	a, a
      000008 F5               [11]  101 	push	af
      000009 33               [ 6]  102 	inc	sp
      00000A 2E 00            [ 7]  103 	ld	l, #0x00
      00000C E5               [11]  104 	push	hl
      00000D CDr00r00         [17]  105 	call	_devkit_SMS_VRAMmemset
      000010 F1               [10]  106 	pop	af
                           000011   107 	C$montylib.c$20$1_0$103	= .
                                    108 	.globl	C$montylib.c$20$1_0$103
                                    109 ;montylib.c:20: devkit_SMS_VRAMmemset(0xC000, 0x00, 0x0020);
      000011 33               [ 6]  110 	inc	sp
      000012 21 20 00         [10]  111 	ld	hl,#0x0020
      000015 E3               [19]  112 	ex	(sp),hl
      000016 AF               [ 4]  113 	xor	a, a
      000017 F5               [11]  114 	push	af
      000018 33               [ 6]  115 	inc	sp
      000019 21 00 C0         [10]  116 	ld	hl, #0xc000
      00001C E5               [11]  117 	push	hl
      00001D CDr00r00         [17]  118 	call	_devkit_SMS_VRAMmemset
      000020 F1               [10]  119 	pop	af
      000021 F1               [10]  120 	pop	af
      000022 33               [ 6]  121 	inc	sp
                           000023   122 	C$montylib.c$21$1_0$103	= .
                                    123 	.globl	C$montylib.c$21$1_0$103
                                    124 ;montylib.c:21: devkit_SMS_setSpriteMode(devkit_SPRITEMODE_NORMAL());
      000023 CDr00r00         [17]  125 	call	_devkit_SPRITEMODE_NORMAL
      000026 7D               [ 4]  126 	ld	a, l
      000027 F5               [11]  127 	push	af
      000028 33               [ 6]  128 	inc	sp
      000029 CDr00r00         [17]  129 	call	_devkit_SMS_setSpriteMode
      00002C 33               [ 6]  130 	inc	sp
                           00002D   131 	C$montylib.c$22$1_0$103	= .
                                    132 	.globl	C$montylib.c$22$1_0$103
                                    133 ;montylib.c:22: devkit_SMS_displayOn();
      00002D CDr00r00         [17]  134 	call	_devkit_SMS_displayOn
                           000030   135 	C$montylib.c$23$1_0$103	= .
                                    136 	.globl	C$montylib.c$23$1_0$103
                                    137 ;montylib.c:23: devkit_SMS_VDPturnOnFeature(devkit_VDPFEATURE_LEFTCOLBLANK());
      000030 CDr00r00         [17]  138 	call	_devkit_VDPFEATURE_LEFTCOLBLANK
      000033 E5               [11]  139 	push	hl
      000034 CDr00r00         [17]  140 	call	_devkit_SMS_VDPturnOnFeature
      000037 F1               [10]  141 	pop	af
                           000038   142 	C$montylib.c$24$1_0$103	= .
                                    143 	.globl	C$montylib.c$24$1_0$103
                                    144 ;montylib.c:24: devkit_SMS_setBackdropColor(0);
      000038 AF               [ 4]  145 	xor	a, a
      000039 F5               [11]  146 	push	af
      00003A 33               [ 6]  147 	inc	sp
      00003B CDr00r00         [17]  148 	call	_devkit_SMS_setBackdropColor
      00003E 33               [ 6]  149 	inc	sp
                           00003F   150 	C$montylib.c$25$1_0$103	= .
                                    151 	.globl	C$montylib.c$25$1_0$103
                                    152 ;montylib.c:25: pause = false;
      00003F 3E 00            [ 7]  153 	ld	a, #0x00
      000041 32r00r00         [13]  154 	ld	(#_pause), a
                           000044   155 	C$montylib.c$26$1_0$103	= .
                                    156 	.globl	C$montylib.c$26$1_0$103
                                    157 ;montylib.c:26: }
                           000044   158 	C$montylib.c$26$1_0$103	= .
                                    159 	.globl	C$montylib.c$26$1_0$103
                           000044   160 	XG$init_console$0$0	= .
                                    161 	.globl	XG$init_console$0$0
      000044 C9               [10]  162 	ret
                           000045   163 G$randLUT$0_0$0 == .
      000045                        164 _randLUT:
      000045 0F                     165 	.db #0x0f	; 15
      000046 6A                     166 	.db #0x6a	; 106	'j'
      000047 09                     167 	.db #0x09	; 9
      000048 8E                     168 	.db #0x8e	; 142
      000049 29                     169 	.db #0x29	; 41
      00004A 7C                     170 	.db #0x7c	; 124
      00004B 76                     171 	.db #0x76	; 118	'v'
      00004C 7D                     172 	.db #0x7d	; 125
      00004D ED                     173 	.db #0xed	; 237
      00004E 83                     174 	.db #0x83	; 131
      00004F 34                     175 	.db #0x34	; 52	'4'
      000050 6A                     176 	.db #0x6a	; 106	'j'
      000051 C2                     177 	.db #0xc2	; 194
      000052 D0                     178 	.db #0xd0	; 208
      000053 5C                     179 	.db #0x5c	; 92
      000054 38                     180 	.db #0x38	; 56	'8'
      000055 80                     181 	.db #0x80	; 128
      000056 0F                     182 	.db #0x0f	; 15
      000057 4D                     183 	.db #0x4d	; 77	'M'
      000058 A8                     184 	.db #0xa8	; 168
      000059 68                     185 	.db #0x68	; 104	'h'
      00005A 34                     186 	.db #0x34	; 52	'4'
      00005B BF                     187 	.db #0xbf	; 191
      00005C DA                     188 	.db #0xda	; 218
      00005D CC                     189 	.db #0xcc	; 204
      00005E 9A                     190 	.db #0x9a	; 154
      00005F C1                     191 	.db #0xc1	; 193
      000060 65                     192 	.db #0x65	; 101	'e'
      000061 F6                     193 	.db #0xf6	; 246
      000062 46                     194 	.db #0x46	; 70	'F'
      000063 0A                     195 	.db #0x0a	; 10
      000064 E6                     196 	.db #0xe6	; 230
      000065 A0                     197 	.db #0xa0	; 160
      000066 2B                     198 	.db #0x2b	; 43
      000067 00                     199 	.db #0x00	; 0
      000068 80                     200 	.db #0x80	; 128
      000069 38                     201 	.db #0x38	; 56	'8'
      00006A B5                     202 	.db #0xb5	; 181
      00006B 9A                     203 	.db #0x9a	; 154
      00006C C3                     204 	.db #0xc3	; 195
      00006D E9                     205 	.db #0xe9	; 233
      00006E A8                     206 	.db #0xa8	; 168
      00006F 6F                     207 	.db #0x6f	; 111	'o'
      000070 0E                     208 	.db #0x0e	; 14
      000071 BC                     209 	.db #0xbc	; 188
      000072 1B                     210 	.db #0x1b	; 27
      000073 8A                     211 	.db #0x8a	; 138
      000074 70                     212 	.db #0x70	; 112	'p'
      000075 42                     213 	.db #0x42	; 66	'B'
      000076 58                     214 	.db #0x58	; 88	'X'
      000077 22                     215 	.db #0x22	; 34
      000078 9D                     216 	.db #0x9d	; 157
      000079 93                     217 	.db #0x93	; 147
      00007A 41                     218 	.db #0x41	; 65	'A'
      00007B 13                     219 	.db #0x13	; 19
      00007C B4                     220 	.db #0xb4	; 180
      00007D 8F                     221 	.db #0x8f	; 143
      00007E 65                     222 	.db #0x65	; 101	'e'
      00007F A6                     223 	.db #0xa6	; 166
      000080 78                     224 	.db #0x78	; 120	'x'
      000081 B7                     225 	.db #0xb7	; 183
      000082 3E                     226 	.db #0x3e	; 62
      000083 24                     227 	.db #0x24	; 36
      000084 BE                     228 	.db #0xbe	; 190
      000085 B3                     229 	.db #0xb3	; 179
      000086 AB                     230 	.db #0xab	; 171
      000087 2E                     231 	.db #0x2e	; 46
      000088 14                     232 	.db #0x14	; 20
      000089 F9                     233 	.db #0xf9	; 249
      00008A 35                     234 	.db #0x35	; 53	'5'
      00008B C3                     235 	.db #0xc3	; 195
      00008C 77                     236 	.db #0x77	; 119	'w'
      00008D 31                     237 	.db #0x31	; 49	'1'
      00008E 5C                     238 	.db #0x5c	; 92
      00008F 96                     239 	.db #0x96	; 150
      000090 1A                     240 	.db #0x1a	; 26
      000091 C7                     241 	.db #0xc7	; 199
      000092 5E                     242 	.db #0x5e	; 94
      000093 E5                     243 	.db #0xe5	; 229
      000094 A2                     244 	.db #0xa2	; 162
      000095 49                     245 	.db #0x49	; 73	'I'
      000096 06                     246 	.db #0x06	; 6
      000097 2F                     247 	.db #0x2f	; 47
      000098 FF                     248 	.db #0xff	; 255
      000099 BA                     249 	.db #0xba	; 186
      00009A 24                     250 	.db #0x24	; 36
      00009B 0F                     251 	.db #0x0f	; 15
      00009C 3F                     252 	.db #0x3f	; 63
      00009D 6C                     253 	.db #0x6c	; 108	'l'
      00009E 5D                     254 	.db #0x5d	; 93
      00009F 23                     255 	.db #0x23	; 35
      0000A0 14                     256 	.db #0x14	; 20
      0000A1 C5                     257 	.db #0xc5	; 197
      0000A2 54                     258 	.db #0x54	; 84	'T'
      0000A3 D8                     259 	.db #0xd8	; 216
      0000A4 68                     260 	.db #0x68	; 104	'h'
      0000A5 54                     261 	.db #0x54	; 84	'T'
      0000A6 01                     262 	.db #0x01	; 1
      0000A7 2B                     263 	.db #0x2b	; 43
      0000A8 C0                     264 	.db #0xc0	; 192
      0000A9 43                     265 	.db #0x43	; 67	'C'
      0000AA A5                     266 	.db #0xa5	; 165
      0000AB C1                     267 	.db #0xc1	; 193
      0000AC 56                     268 	.db #0x56	; 86	'V'
      0000AD B4                     269 	.db #0xb4	; 180
      0000AE 8B                     270 	.db #0x8b	; 139
      0000AF BB                     271 	.db #0xbb	; 187
      0000B0 0B                     272 	.db #0x0b	; 11
      0000B1 58                     273 	.db #0x58	; 88	'X'
      0000B2 00                     274 	.db #0x00	; 0
      0000B3 34                     275 	.db #0x34	; 52	'4'
      0000B4 44                     276 	.db #0x44	; 68	'D'
      0000B5 9E                     277 	.db #0x9e	; 158
      0000B6 92                     278 	.db #0x92	; 146
      0000B7 C1                     279 	.db #0xc1	; 193
      0000B8 10                     280 	.db #0x10	; 16
      0000B9 65                     281 	.db #0x65	; 101	'e'
      0000BA 93                     282 	.db #0x93	; 147
      0000BB 75                     283 	.db #0x75	; 117	'u'
      0000BC 87                     284 	.db #0x87	; 135
      0000BD C1                     285 	.db #0xc1	; 193
      0000BE 91                     286 	.db #0x91	; 145
      0000BF 7B                     287 	.db #0x7b	; 123
      0000C0 09                     288 	.db #0x09	; 9
      0000C1 15                     289 	.db #0x15	; 21
      0000C2 D2                     290 	.db #0xd2	; 210
      0000C3 85                     291 	.db #0x85	; 133
      0000C4 D8                     292 	.db #0xd8	; 216
      0000C5 A3                     293 	.db #0xa3	; 163
      0000C6 85                     294 	.db #0x85	; 133
      0000C7 B8                     295 	.db #0xb8	; 184
      0000C8 32                     296 	.db #0x32	; 50	'2'
      0000C9 C8                     297 	.db #0xc8	; 200
      0000CA 01                     298 	.db #0x01	; 1
      0000CB 3F                     299 	.db #0x3f	; 63
      0000CC 00                     300 	.db #0x00	; 0
      0000CD 61                     301 	.db #0x61	; 97	'a'
      0000CE D4                     302 	.db #0xd4	; 212
      0000CF F4                     303 	.db #0xf4	; 244
      0000D0 3D                     304 	.db #0x3d	; 61
      0000D1 CA                     305 	.db #0xca	; 202
      0000D2 D5                     306 	.db #0xd5	; 213
      0000D3 85                     307 	.db #0x85	; 133
      0000D4 FF                     308 	.db #0xff	; 255
      0000D5 64                     309 	.db #0x64	; 100	'd'
      0000D6 51                     310 	.db #0x51	; 81	'Q'
      0000D7 8E                     311 	.db #0x8e	; 142
      0000D8 21                     312 	.db #0x21	; 33
      0000D9 B8                     313 	.db #0xb8	; 184
      0000DA 32                     314 	.db #0x32	; 50	'2'
      0000DB A6                     315 	.db #0xa6	; 166
      0000DC 56                     316 	.db #0x56	; 86	'V'
      0000DD B7                     317 	.db #0xb7	; 183
      0000DE 8F                     318 	.db #0x8f	; 143
      0000DF 45                     319 	.db #0x45	; 69	'E'
      0000E0 3A                     320 	.db #0x3a	; 58
      0000E1 FF                     321 	.db #0xff	; 255
      0000E2 39                     322 	.db #0x39	; 57	'9'
      0000E3 33                     323 	.db #0x33	; 51	'3'
      0000E4 FC                     324 	.db #0xfc	; 252
      0000E5 63                     325 	.db #0x63	; 99	'c'
      0000E6 B8                     326 	.db #0xb8	; 184
      0000E7 D5                     327 	.db #0xd5	; 213
      0000E8 CA                     328 	.db #0xca	; 202
      0000E9 C5                     329 	.db #0xc5	; 197
      0000EA 11                     330 	.db #0x11	; 17
      0000EB 35                     331 	.db #0x35	; 53	'5'
      0000EC EE                     332 	.db #0xee	; 238
      0000ED E2                     333 	.db #0xe2	; 226
      0000EE 65                     334 	.db #0x65	; 101	'e'
      0000EF 65                     335 	.db #0x65	; 101	'e'
      0000F0 BD                     336 	.db #0xbd	; 189
      0000F1 C8                     337 	.db #0xc8	; 200
      0000F2 31                     338 	.db #0x31	; 49	'1'
      0000F3 99                     339 	.db #0x99	; 153
      0000F4 A1                     340 	.db #0xa1	; 161
      0000F5 04                     341 	.db #0x04	; 4
      0000F6 86                     342 	.db #0x86	; 134
      0000F7 FF                     343 	.db #0xff	; 255
      0000F8 90                     344 	.db #0x90	; 144
      0000F9 47                     345 	.db #0x47	; 71	'G'
      0000FA 3B                     346 	.db #0x3b	; 59
      0000FB D0                     347 	.db #0xd0	; 208
      0000FC 5B                     348 	.db #0x5b	; 91
      0000FD 04                     349 	.db #0x04	; 4
      0000FE BC                     350 	.db #0xbc	; 188
      0000FF A9                     351 	.db #0xa9	; 169
      000100 8A                     352 	.db #0x8a	; 138
      000101 35                     353 	.db #0x35	; 53	'5'
      000102 A3                     354 	.db #0xa3	; 163
      000103 2B                     355 	.db #0x2b	; 43
      000104 B3                     356 	.db #0xb3	; 179
      000105 3C                     357 	.db #0x3c	; 60
      000106 3C                     358 	.db #0x3c	; 60
      000107 3D                     359 	.db #0x3d	; 61
      000108 CF                     360 	.db #0xcf	; 207
      000109 EB                     361 	.db #0xeb	; 235
      00010A 73                     362 	.db #0x73	; 115	's'
      00010B B4                     363 	.db #0xb4	; 180
      00010C DD                     364 	.db #0xdd	; 221
      00010D B1                     365 	.db #0xb1	; 177
      00010E 86                     366 	.db #0x86	; 134
      00010F 65                     367 	.db #0x65	; 101	'e'
      000110 D2                     368 	.db #0xd2	; 210
      000111 03                     369 	.db #0x03	; 3
      000112 AC                     370 	.db #0xac	; 172
      000113 28                     371 	.db #0x28	; 40
      000114 9B                     372 	.db #0x9b	; 155
      000115 7F                     373 	.db #0x7f	; 127
      000116 B2                     374 	.db #0xb2	; 178
      000117 EC                     375 	.db #0xec	; 236
      000118 1B                     376 	.db #0x1b	; 27
      000119 D5                     377 	.db #0xd5	; 213
      00011A 0A                     378 	.db #0x0a	; 10
      00011B 18                     379 	.db #0x18	; 24
      00011C 11                     380 	.db #0x11	; 17
      00011D CD                     381 	.db #0xcd	; 205
      00011E 2E                     382 	.db #0x2e	; 46
      00011F 4A                     383 	.db #0x4a	; 74	'J'
      000120 9C                     384 	.db #0x9c	; 156
      000121 A0                     385 	.db #0xa0	; 160
      000122 58                     386 	.db #0x58	; 88	'X'
      000123 59                     387 	.db #0x59	; 89	'Y'
      000124 F8                     388 	.db #0xf8	; 248
      000125 2B                     389 	.db #0x2b	; 43
      000126 38                     390 	.db #0x38	; 56	'8'
      000127 99                     391 	.db #0x99	; 153
      000128 53                     392 	.db #0x53	; 83	'S'
      000129 3C                     393 	.db #0x3c	; 60
      00012A B8                     394 	.db #0xb8	; 184
      00012B 3C                     395 	.db #0x3c	; 60
      00012C 99                     396 	.db #0x99	; 153
      00012D E5                     397 	.db #0xe5	; 229
      00012E 6F                     398 	.db #0x6f	; 111	'o'
      00012F 5C                     399 	.db #0x5c	; 92
      000130 2B                     400 	.db #0x2b	; 43
      000131 2D                     401 	.db #0x2d	; 45
      000132 E0                     402 	.db #0xe0	; 224
      000133 06                     403 	.db #0x06	; 6
      000134 CA                     404 	.db #0xca	; 202
      000135 DE                     405 	.db #0xde	; 222
      000136 01                     406 	.db #0x01	; 1
      000137 3C                     407 	.db #0x3c	; 60
      000138 EB                     408 	.db #0xeb	; 235
      000139 91                     409 	.db #0x91	; 145
      00013A A4                     410 	.db #0xa4	; 164
      00013B 28                     411 	.db #0x28	; 40
      00013C 52                     412 	.db #0x52	; 82	'R'
      00013D B1                     413 	.db #0xb1	; 177
      00013E 60                     414 	.db #0x60	; 96
      00013F 56                     415 	.db #0x56	; 86	'V'
      000140 D3                     416 	.db #0xd3	; 211
      000141 AE                     417 	.db #0xae	; 174
      000142 38                     418 	.db #0x38	; 56	'8'
      000143 69                     419 	.db #0x69	; 105	'i'
      000144 00                     420 	.db 0x00
                           000145   421 	G$init_scroll$0$0	= .
                                    422 	.globl	G$init_scroll$0$0
                           000145   423 	C$montylib.c$28$1_0$105	= .
                                    424 	.globl	C$montylib.c$28$1_0$105
                                    425 ;montylib.c:28: void init_scroll(void *scrolltable, void *metatiles, unsigned int scroll_x, unsigned int scroll_y)
                                    426 ;	---------------------------------
                                    427 ; Function init_scroll
                                    428 ; ---------------------------------
      000145                        429 _init_scroll::
                           000145   430 	C$montylib.c$30$1_0$105	= .
                                    431 	.globl	C$montylib.c$30$1_0$105
                                    432 ;montylib.c:30: devkit_GSL_initializeMap(scrolltable, metatiles);
      000145 FD 21 04 00      [14]  433 	ld	iy, #4
      000149 FD 39            [15]  434 	add	iy, sp
      00014B FD 6E 00         [19]  435 	ld	l, 0 (iy)
      00014E FD 66 01         [19]  436 	ld	h, 1 (iy)
      000151 E5               [11]  437 	push	hl
      000152 FD 6E FE         [19]  438 	ld	l, -2 (iy)
      000155 FD 66 FF         [19]  439 	ld	h, -1 (iy)
      000158 E5               [11]  440 	push	hl
      000159 CDr00r00         [17]  441 	call	_devkit_GSL_initializeMap
      00015C F1               [10]  442 	pop	af
      00015D F1               [10]  443 	pop	af
                           00015E   444 	C$montylib.c$31$1_0$105	= .
                                    445 	.globl	C$montylib.c$31$1_0$105
                                    446 ;montylib.c:31: devkit_GSL_positionWindow(scroll_x,scroll_y);
      00015E FD 21 08 00      [14]  447 	ld	iy, #8
      000162 FD 39            [15]  448 	add	iy, sp
      000164 FD 6E 00         [19]  449 	ld	l, 0 (iy)
      000167 FD 66 01         [19]  450 	ld	h, 1 (iy)
      00016A E5               [11]  451 	push	hl
      00016B FD 6E FE         [19]  452 	ld	l, -2 (iy)
      00016E FD 66 FF         [19]  453 	ld	h, -1 (iy)
      000171 E5               [11]  454 	push	hl
      000172 CDr00r00         [17]  455 	call	_devkit_GSL_positionWindow
      000175 F1               [10]  456 	pop	af
      000176 F1               [10]  457 	pop	af
                           000177   458 	C$montylib.c$32$1_0$105	= .
                                    459 	.globl	C$montylib.c$32$1_0$105
                                    460 ;montylib.c:32: devkit_GSL_refreshVDP();
                           000177   461 	C$montylib.c$33$1_0$105	= .
                                    462 	.globl	C$montylib.c$33$1_0$105
                                    463 ;montylib.c:33: }
                           000177   464 	C$montylib.c$33$1_0$105	= .
                                    465 	.globl	C$montylib.c$33$1_0$105
                           000177   466 	XG$init_scroll$0$0	= .
                                    467 	.globl	XG$init_scroll$0$0
      000177 C3r00r00         [10]  468 	jp	_devkit_GSL_refreshVDP
                           00017A   469 	G$move_scroll$0$0	= .
                                    470 	.globl	G$move_scroll$0$0
                           00017A   471 	C$montylib.c$35$1_0$107	= .
                                    472 	.globl	C$montylib.c$35$1_0$107
                                    473 ;montylib.c:35: void move_scroll(signed char delta_x, signed char delta_y)
                                    474 ;	---------------------------------
                                    475 ; Function move_scroll
                                    476 ; ---------------------------------
      00017A                        477 _move_scroll::
      00017A DD E5            [15]  478 	push	ix
      00017C DD 21 00 00      [14]  479 	ld	ix,#0
      000180 DD 39            [15]  480 	add	ix,sp
                           000182   481 	C$montylib.c$37$1_0$107	= .
                                    482 	.globl	C$montylib.c$37$1_0$107
                                    483 ;montylib.c:37: signed int currentx = devkit_GSL_getCurrentX();
      000182 CDr00r00         [17]  484 	call	_devkit_GSL_getCurrentX
                           000185   485 	C$montylib.c$38$1_0$107	= .
                                    486 	.globl	C$montylib.c$38$1_0$107
                                    487 ;montylib.c:38: signed int currenty = devkit_GSL_getCurrentY();
      000185 E5               [11]  488 	push	hl
      000186 CDr00r00         [17]  489 	call	_devkit_GSL_getCurrentY
      000189 D1               [10]  490 	pop	de
      00018A 4D               [ 4]  491 	ld	c, l
      00018B 44               [ 4]  492 	ld	b, h
                           00018C   493 	C$montylib.c$39$1_0$107	= .
                                    494 	.globl	C$montylib.c$39$1_0$107
                                    495 ;montylib.c:39: if((currentx + delta_x) < 0) delta_x = 0;
      00018C DD 7E 04         [19]  496 	ld	a, 4 (ix)
      00018F 6F               [ 4]  497 	ld	l, a
      000190 17               [ 4]  498 	rla
      000191 9F               [ 4]  499 	sbc	a, a
      000192 67               [ 4]  500 	ld	h, a
      000193 19               [11]  501 	add	hl, de
      000194 CB 7C            [ 8]  502 	bit	7, h
      000196 28 04            [12]  503 	jr	Z, 00102$
      000198 DD 36 04 00      [19]  504 	ld	4 (ix), #0
      00019C                        505 00102$:
                           00019C   506 	C$montylib.c$40$1_0$107	= .
                                    507 	.globl	C$montylib.c$40$1_0$107
                                    508 ;montylib.c:40: if((currentx + delta_x) > (devkit_GSL_getMapWidthInPixels() - 256)) delta_x = 0;
      00019C DD 7E 04         [19]  509 	ld	a, 4 (ix)
      00019F 6F               [ 4]  510 	ld	l, a
      0001A0 17               [ 4]  511 	rla
      0001A1 9F               [ 4]  512 	sbc	a, a
      0001A2 67               [ 4]  513 	ld	h, a
      0001A3 19               [11]  514 	add	hl, de
      0001A4 C5               [11]  515 	push	bc
      0001A5 E5               [11]  516 	push	hl
      0001A6 CDr00r00         [17]  517 	call	_devkit_GSL_getMapWidthInPixels
      0001A9 D1               [10]  518 	pop	de
      0001AA C1               [10]  519 	pop	bc
      0001AB 7C               [ 4]  520 	ld	a,h
      0001AC C6 FF            [ 7]  521 	add	a,#0xff
      0001AE 67               [ 4]  522 	ld	h, a
      0001AF AF               [ 4]  523 	xor	a, a
      0001B0 ED 52            [15]  524 	sbc	hl, de
      0001B2 30 04            [12]  525 	jr	NC, 00104$
      0001B4 DD 36 04 00      [19]  526 	ld	4 (ix), #0
      0001B8                        527 00104$:
                           0001B8   528 	C$montylib.c$41$1_0$107	= .
                                    529 	.globl	C$montylib.c$41$1_0$107
                                    530 ;montylib.c:41: if((currenty + delta_y) < 0) delta_y = 0;
      0001B8 DD 7E 05         [19]  531 	ld	a, 5 (ix)
      0001BB 6F               [ 4]  532 	ld	l, a
      0001BC 17               [ 4]  533 	rla
      0001BD 9F               [ 4]  534 	sbc	a, a
      0001BE 67               [ 4]  535 	ld	h, a
      0001BF 09               [11]  536 	add	hl, bc
      0001C0 CB 7C            [ 8]  537 	bit	7, h
      0001C2 28 04            [12]  538 	jr	Z, 00106$
      0001C4 DD 36 05 00      [19]  539 	ld	5 (ix), #0
      0001C8                        540 00106$:
                           0001C8   541 	C$montylib.c$42$1_0$107	= .
                                    542 	.globl	C$montylib.c$42$1_0$107
                                    543 ;montylib.c:42: if((currenty + delta_y) > (devkit_GSL_getMapHeightInPixels() - 192)) delta_y = 0;
      0001C8 DD 7E 05         [19]  544 	ld	a, 5 (ix)
      0001CB 6F               [ 4]  545 	ld	l, a
      0001CC 17               [ 4]  546 	rla
      0001CD 9F               [ 4]  547 	sbc	a, a
      0001CE 67               [ 4]  548 	ld	h, a
      0001CF 09               [11]  549 	add	hl, bc
      0001D0 E5               [11]  550 	push	hl
      0001D1 CDr00r00         [17]  551 	call	_devkit_GSL_getMapHeightInPixels
      0001D4 D1               [10]  552 	pop	de
      0001D5 7D               [ 4]  553 	ld	a, l
      0001D6 C6 40            [ 7]  554 	add	a, #0x40
      0001D8 6F               [ 4]  555 	ld	l, a
      0001D9 7C               [ 4]  556 	ld	a, h
      0001DA CE FF            [ 7]  557 	adc	a, #0xff
      0001DC 67               [ 4]  558 	ld	h, a
      0001DD AF               [ 4]  559 	xor	a, a
      0001DE ED 52            [15]  560 	sbc	hl, de
      0001E0 30 04            [12]  561 	jr	NC, 00108$
      0001E2 DD 36 05 00      [19]  562 	ld	5 (ix), #0
      0001E6                        563 00108$:
                           0001E6   564 	C$montylib.c$44$1_0$107	= .
                                    565 	.globl	C$montylib.c$44$1_0$107
                                    566 ;montylib.c:44: devkit_GSL_scroll(delta_x,delta_y);
      0001E6 DD 66 05         [19]  567 	ld	h, 5 (ix)
      0001E9 DD 6E 04         [19]  568 	ld	l, 4 (ix)
      0001EC E5               [11]  569 	push	hl
      0001ED CDr00r00         [17]  570 	call	_devkit_GSL_scroll
      0001F0 F1               [10]  571 	pop	af
                           0001F1   572 	C$montylib.c$45$1_0$107	= .
                                    573 	.globl	C$montylib.c$45$1_0$107
                                    574 ;montylib.c:45: }
      0001F1 DD E1            [14]  575 	pop	ix
                           0001F3   576 	C$montylib.c$45$1_0$107	= .
                                    577 	.globl	C$montylib.c$45$1_0$107
                           0001F3   578 	XG$move_scroll$0$0	= .
                                    579 	.globl	XG$move_scroll$0$0
      0001F3 C9               [10]  580 	ret
                           0001F4   581 	G$get_scroll_x$0$0	= .
                                    582 	.globl	G$get_scroll_x$0$0
                           0001F4   583 	C$montylib.c$47$1_0$108	= .
                                    584 	.globl	C$montylib.c$47$1_0$108
                                    585 ;montylib.c:47: unsigned int get_scroll_x()
                                    586 ;	---------------------------------
                                    587 ; Function get_scroll_x
                                    588 ; ---------------------------------
      0001F4                        589 _get_scroll_x::
                           0001F4   590 	C$montylib.c$49$1_0$108	= .
                                    591 	.globl	C$montylib.c$49$1_0$108
                                    592 ;montylib.c:49: return devkit_GSL_getCurrentX();
                           0001F4   593 	C$montylib.c$50$1_0$108	= .
                                    594 	.globl	C$montylib.c$50$1_0$108
                                    595 ;montylib.c:50: }
                           0001F4   596 	C$montylib.c$50$1_0$108	= .
                                    597 	.globl	C$montylib.c$50$1_0$108
                           0001F4   598 	XG$get_scroll_x$0$0	= .
                                    599 	.globl	XG$get_scroll_x$0$0
      0001F4 C3r00r00         [10]  600 	jp	_devkit_GSL_getCurrentX
                           0001F7   601 	G$get_scroll_y$0$0	= .
                                    602 	.globl	G$get_scroll_y$0$0
                           0001F7   603 	C$montylib.c$52$1_0$109	= .
                                    604 	.globl	C$montylib.c$52$1_0$109
                                    605 ;montylib.c:52: unsigned int get_scroll_y()
                                    606 ;	---------------------------------
                                    607 ; Function get_scroll_y
                                    608 ; ---------------------------------
      0001F7                        609 _get_scroll_y::
                           0001F7   610 	C$montylib.c$54$1_0$109	= .
                                    611 	.globl	C$montylib.c$54$1_0$109
                                    612 ;montylib.c:54: return devkit_GSL_getCurrentY();
                           0001F7   613 	C$montylib.c$55$1_0$109	= .
                                    614 	.globl	C$montylib.c$55$1_0$109
                                    615 ;montylib.c:55: }
                           0001F7   616 	C$montylib.c$55$1_0$109	= .
                                    617 	.globl	C$montylib.c$55$1_0$109
                           0001F7   618 	XG$get_scroll_y$0$0	= .
                                    619 	.globl	XG$get_scroll_y$0$0
      0001F7 C3r00r00         [10]  620 	jp	_devkit_GSL_getCurrentY
                           0001FA   621 	G$waitForFrame$0$0	= .
                                    622 	.globl	G$waitForFrame$0$0
                           0001FA   623 	C$montylib.c$57$1_0$110	= .
                                    624 	.globl	C$montylib.c$57$1_0$110
                                    625 ;montylib.c:57: void waitForFrame()
                                    626 ;	---------------------------------
                                    627 ; Function waitForFrame
                                    628 ; ---------------------------------
      0001FA                        629 _waitForFrame::
                           0001FA   630 	C$montylib.c$59$1_0$110	= .
                                    631 	.globl	C$montylib.c$59$1_0$110
                                    632 ;montylib.c:59: if(!pause)
      0001FA 21r00r00         [10]  633 	ld	hl, #_pause
      0001FD CB 46            [12]  634 	bit	0, (hl)
      0001FF 20 03            [12]  635 	jr	NZ, 00102$
                           000201   636 	C$montylib.c$61$2_0$111	= .
                                    637 	.globl	C$montylib.c$61$2_0$111
                                    638 ;montylib.c:61: manage_sound_frame();
      000201 CDr00r00         [17]  639 	call	_manage_sound_frame
      000204                        640 00102$:
                           000204   641 	C$montylib.c$63$1_0$110	= .
                                    642 	.globl	C$montylib.c$63$1_0$110
                                    643 ;montylib.c:63: devkit_SMS_waitForVBlank();
      000204 CDr00r00         [17]  644 	call	_devkit_SMS_waitForVBlank
                           000207   645 	C$montylib.c$64$1_0$110	= .
                                    646 	.globl	C$montylib.c$64$1_0$110
                                    647 ;montylib.c:64: devkit_GSL_VBlank();
      000207 CDr00r00         [17]  648 	call	_devkit_GSL_VBlank
                           00020A   649 	C$montylib.c$65$1_0$110	= .
                                    650 	.globl	C$montylib.c$65$1_0$110
                                    651 ;montylib.c:65: devkit_SMS_copySpritestoSAT();
                           00020A   652 	C$montylib.c$66$1_0$110	= .
                                    653 	.globl	C$montylib.c$66$1_0$110
                                    654 ;montylib.c:66: }
                           00020A   655 	C$montylib.c$66$1_0$110	= .
                                    656 	.globl	C$montylib.c$66$1_0$110
                           00020A   657 	XG$waitForFrame$0$0	= .
                                    658 	.globl	XG$waitForFrame$0$0
      00020A C3r00r00         [10]  659 	jp	_devkit_SMS_copySpritestoSAT
                           00020D   660 	G$rand$0$0	= .
                                    661 	.globl	G$rand$0$0
                           00020D   662 	C$montylib.c$68$1_0$112	= .
                                    663 	.globl	C$montylib.c$68$1_0$112
                                    664 ;montylib.c:68: unsigned char rand() {
                                    665 ;	---------------------------------
                                    666 ; Function rand
                                    667 ; ---------------------------------
      00020D                        668 _rand::
                           00020D   669 	C$montylib.c$70$1_0$112	= .
                                    670 	.globl	C$montylib.c$70$1_0$112
                                    671 ;montylib.c:70: return randLUT[rand_index++];
      00020D FD 21r00r00      [14]  672 	ld	iy, #_rand_index
      000211 FD 4E 00         [19]  673 	ld	c, 0 (iy)
      000214 FD 34 00         [23]  674 	inc	0 (iy)
      000217 21r45r00         [10]  675 	ld	hl, #_randLUT
      00021A 06 00            [ 7]  676 	ld	b, #0x00
      00021C 09               [11]  677 	add	hl, bc
      00021D 6E               [ 7]  678 	ld	l, (hl)
                           00021E   679 	C$montylib.c$71$1_0$112	= .
                                    680 	.globl	C$montylib.c$71$1_0$112
                                    681 ;montylib.c:71: }
                           00021E   682 	C$montylib.c$71$1_0$112	= .
                                    683 	.globl	C$montylib.c$71$1_0$112
                           00021E   684 	XG$rand$0$0	= .
                                    685 	.globl	XG$rand$0$0
      00021E C9               [10]  686 	ret
                                    687 	.area _CODE
                                    688 	.area _INITIALIZER
                           000000   689 Fmontylib$__xinit_rand_index$0_0$0 == .
      000000                        690 __xinit__rand_index:
      000000 00                     691 	.db #0x00	; 0
                                    692 	.area _CABS (ABS)
