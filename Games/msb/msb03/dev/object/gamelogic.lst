                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module gamelogic
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _devkit_PORT_A_KEY_1
                                     12 	.globl _devkit_SMS_getKeysStatus
                                     13 	.globl _devkit_SMS_setBackdropColor
                                     14 	.globl _play_game_music
                                     15 	.globl _play_presentation_music
                                     16 	.globl _play_logo_music
                                     17 	.globl _load_background_blackpalette
                                     18 	.globl _update_resources
                                     19 	.globl _get_scroll_position_x
                                     20 	.globl _update_scroll
                                     21 	.globl _init_level1_scroll
                                     22 	.globl _load_level1_assets
                                     23 	.globl _load_presentation_fullpalette
                                     24 	.globl _load_presentation_halfpalette
                                     25 	.globl _load_presentation_assets
                                     26 	.globl _load_fnaclogo_fullpalette
                                     27 	.globl _load_fnaclogo_halfpalette
                                     28 	.globl _load_fnaclogo_assets
                                     29 	.globl _load_logo_fullpalette
                                     30 	.globl _load_logo_halfpalette
                                     31 	.globl _load_logo_assets
                                     32 	.globl _waitForFrame
                                     33 	.globl _init_console
                                     34 	.globl _update_player_positions
                                     35 	.globl _manage_input
                                     36 	.globl _add_player
                                     37 	.globl _scroll_enabled
                                     38 	.globl _score
                                     39 	.globl _game_status
                                     40 	.globl _init_game
                                     41 	.globl _play_game
                                     42 	.globl _logo_screen
                                     43 	.globl _fnaclogo_screen
                                     44 	.globl _presentation_screen
                                     45 	.globl _game_loop
                                     46 	.globl _init_gamestatus
                                     47 	.globl _execute_game_logic
                                     48 ;--------------------------------------------------------
                                     49 ; special function registers
                                     50 ;--------------------------------------------------------
                                     51 ;--------------------------------------------------------
                                     52 ; ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _DATA
                           000000    55 G$game_status$0_0$0==.
      000000                         56 _game_status::
      000000                         57 	.ds 1
                           000001    58 G$score$0_0$0==.
      000001                         59 _score::
      000001                         60 	.ds 2
                           000003    61 G$scroll_enabled$0_0$0==.
      000003                         62 _scroll_enabled::
      000003                         63 	.ds 1
                                     64 ;--------------------------------------------------------
                                     65 ; ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area _INITIALIZED
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area _DABS (ABS)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area _HOME
                                     76 	.area _GSINIT
                                     77 	.area _GSFINAL
                                     78 	.area _GSINIT
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area _HOME
                                     83 	.area _HOME
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area _CODE
                           000000    88 	G$init_game$0$0	= .
                                     89 	.globl	G$init_game$0$0
                           000000    90 	C$gamelogic.c$15$0_0$106	= .
                                     91 	.globl	C$gamelogic.c$15$0_0$106
                                     92 ;gamelogic.c:15: void init_game()
                                     93 ;	---------------------------------
                                     94 ; Function init_game
                                     95 ; ---------------------------------
      000000                         96 _init_game::
                           000000    97 	C$gamelogic.c$17$1_0$106	= .
                                     98 	.globl	C$gamelogic.c$17$1_0$106
                                     99 ;gamelogic.c:17: init_console();
                           000000   100 	C$gamelogic.c$18$1_0$106	= .
                                    101 	.globl	C$gamelogic.c$18$1_0$106
                                    102 ;gamelogic.c:18: }
                           000000   103 	C$gamelogic.c$18$1_0$106	= .
                                    104 	.globl	C$gamelogic.c$18$1_0$106
                           000000   105 	XG$init_game$0$0	= .
                                    106 	.globl	XG$init_game$0$0
      000000 C3r00r00         [10]  107 	jp	_init_console
                           000003   108 	G$play_game$0$0	= .
                                    109 	.globl	G$play_game$0$0
                           000003   110 	C$gamelogic.c$20$1_0$107	= .
                                    111 	.globl	C$gamelogic.c$20$1_0$107
                                    112 ;gamelogic.c:20: void play_game()
                                    113 ;	---------------------------------
                                    114 ; Function play_game
                                    115 ; ---------------------------------
      000003                        116 _play_game::
                           000003   117 	C$gamelogic.c$22$1_0$107	= .
                                    118 	.globl	C$gamelogic.c$22$1_0$107
                                    119 ;gamelogic.c:22: logo_screen();
      000003 CDr16r00         [17]  120 	call	_logo_screen
                           000006   121 	C$gamelogic.c$23$1_0$107	= .
                                    122 	.globl	C$gamelogic.c$23$1_0$107
                                    123 ;gamelogic.c:23: fnaclogo_screen();
      000006 CDr83r00         [17]  124 	call	_fnaclogo_screen
                           000009   125 	C$gamelogic.c$24$1_0$107	= .
                                    126 	.globl	C$gamelogic.c$24$1_0$107
                                    127 ;gamelogic.c:24: presentation_screen();
      000009 CDrEDr00         [17]  128 	call	_presentation_screen
                           00000C   129 	C$gamelogic.c$25$1_0$107	= .
                                    130 	.globl	C$gamelogic.c$25$1_0$107
                                    131 ;gamelogic.c:25: while(game_status != GAME_STATUS_GAME_OVER)
      00000C                        132 00101$:
      00000C 3Ar00r00         [13]  133 	ld	a,(#_game_status + 0)
      00000F 3D               [ 4]  134 	dec	a
      000010 C8               [11]  135 	ret	Z
                           000011   136 	C$gamelogic.c$27$2_0$108	= .
                                    137 	.globl	C$gamelogic.c$27$2_0$108
                                    138 ;gamelogic.c:27: game_loop();
      000011 CDr86r01         [17]  139 	call	_game_loop
                           000014   140 	C$gamelogic.c$29$1_0$107	= .
                                    141 	.globl	C$gamelogic.c$29$1_0$107
                                    142 ;gamelogic.c:29: }
                           000014   143 	C$gamelogic.c$29$1_0$107	= .
                                    144 	.globl	C$gamelogic.c$29$1_0$107
                           000014   145 	XG$play_game$0$0	= .
                                    146 	.globl	XG$play_game$0$0
      000014 18 F6            [12]  147 	jr	00101$
                           000016   148 	G$logo_screen$0$0	= .
                                    149 	.globl	G$logo_screen$0$0
                           000016   150 	C$gamelogic.c$31$1_0$109	= .
                                    151 	.globl	C$gamelogic.c$31$1_0$109
                                    152 ;gamelogic.c:31: void logo_screen()
                                    153 ;	---------------------------------
                                    154 ; Function logo_screen
                                    155 ; ---------------------------------
      000016                        156 _logo_screen::
                           000016   157 	C$gamelogic.c$33$1_0$109	= .
                                    158 	.globl	C$gamelogic.c$33$1_0$109
                                    159 ;gamelogic.c:33: load_logo_assets();
      000016 CDr00r00         [17]  160 	call	_load_logo_assets
                           000019   161 	C$gamelogic.c$34$1_0$109	= .
                                    162 	.globl	C$gamelogic.c$34$1_0$109
                                    163 ;gamelogic.c:34: load_background_blackpalette();
      000019 CDr00r00         [17]  164 	call	_load_background_blackpalette
                           00001C   165 	C$gamelogic.c$35$1_0$109	= .
                                    166 	.globl	C$gamelogic.c$35$1_0$109
                                    167 ;gamelogic.c:35: frame_cnt = 0;
      00001C 21 00 00         [10]  168 	ld	hl, #0x0000
      00001F 22r00r00         [16]  169 	ld	(_frame_cnt), hl
                           000022   170 	C$gamelogic.c$36$1_0$109	= .
                                    171 	.globl	C$gamelogic.c$36$1_0$109
                                    172 ;gamelogic.c:36: play_logo_music();
      000022 CDr00r00         [17]  173 	call	_play_logo_music
                           000025   174 	C$gamelogic.c$37$1_0$109	= .
                                    175 	.globl	C$gamelogic.c$37$1_0$109
                                    176 ;gamelogic.c:37: while (frame_cnt < 300)
      000025                        177 00109$:
      000025 FD 21r00r00      [14]  178 	ld	iy, #_frame_cnt
      000029 FD 7E 00         [19]  179 	ld	a, 0 (iy)
      00002C D6 2C            [ 7]  180 	sub	a, #0x2c
      00002E FD 7E 01         [19]  181 	ld	a, 1 (iy)
      000031 DE 01            [ 7]  182 	sbc	a, #0x01
      000033 D0               [11]  183 	ret	NC
                           000034   184 	C$gamelogic.c$39$2_0$110	= .
                                    185 	.globl	C$gamelogic.c$39$2_0$110
                                    186 ;gamelogic.c:39: frame_cnt++;
      000034 2Ar00r00         [16]  187 	ld	hl, (_frame_cnt)
      000037 23               [ 6]  188 	inc	hl
      000038 22r00r00         [16]  189 	ld	(_frame_cnt), hl
                           00003B   190 	C$gamelogic.c$40$2_0$110	= .
                                    191 	.globl	C$gamelogic.c$40$2_0$110
                                    192 ;gamelogic.c:40: if(frame_cnt == 25)
      00003B FD 7E 00         [19]  193 	ld	a, 0 (iy)
      00003E D6 19            [ 7]  194 	sub	a, #0x19
      000040 FD B6 01         [19]  195 	or	a, 1 (iy)
      000043 20 03            [12]  196 	jr	NZ, 00102$
                           000045   197 	C$gamelogic.c$42$3_0$111	= .
                                    198 	.globl	C$gamelogic.c$42$3_0$111
                                    199 ;gamelogic.c:42: load_logo_halfpalette();
      000045 CDr00r00         [17]  200 	call	_load_logo_halfpalette
      000048                        201 00102$:
                           000048   202 	C$gamelogic.c$44$2_0$110	= .
                                    203 	.globl	C$gamelogic.c$44$2_0$110
                                    204 ;gamelogic.c:44: if(frame_cnt == 50)
      000048 FD 21r00r00      [14]  205 	ld	iy, #_frame_cnt
      00004C FD 7E 00         [19]  206 	ld	a, 0 (iy)
      00004F D6 32            [ 7]  207 	sub	a, #0x32
      000051 FD B6 01         [19]  208 	or	a, 1 (iy)
      000054 20 03            [12]  209 	jr	NZ, 00104$
                           000056   210 	C$gamelogic.c$46$3_0$112	= .
                                    211 	.globl	C$gamelogic.c$46$3_0$112
                                    212 ;gamelogic.c:46: load_logo_fullpalette();
      000056 CDr00r00         [17]  213 	call	_load_logo_fullpalette
      000059                        214 00104$:
                           000059   215 	C$gamelogic.c$48$2_0$110	= .
                                    216 	.globl	C$gamelogic.c$48$2_0$110
                                    217 ;gamelogic.c:48: if(frame_cnt == 250)
      000059 FD 21r00r00      [14]  218 	ld	iy, #_frame_cnt
      00005D FD 7E 00         [19]  219 	ld	a, 0 (iy)
      000060 D6 FA            [ 7]  220 	sub	a, #0xfa
      000062 FD B6 01         [19]  221 	or	a, 1 (iy)
      000065 20 03            [12]  222 	jr	NZ, 00106$
                           000067   223 	C$gamelogic.c$50$3_0$113	= .
                                    224 	.globl	C$gamelogic.c$50$3_0$113
                                    225 ;gamelogic.c:50: load_logo_halfpalette();
      000067 CDr00r00         [17]  226 	call	_load_logo_halfpalette
      00006A                        227 00106$:
                           00006A   228 	C$gamelogic.c$52$2_0$110	= .
                                    229 	.globl	C$gamelogic.c$52$2_0$110
                                    230 ;gamelogic.c:52: if(frame_cnt == 275)
      00006A FD 21r00r00      [14]  231 	ld	iy, #_frame_cnt
      00006E FD 7E 00         [19]  232 	ld	a, 0 (iy)
      000071 D6 13            [ 7]  233 	sub	a, #0x13
      000073 20 09            [12]  234 	jr	NZ, 00108$
      000075 FD 7E 01         [19]  235 	ld	a, 1 (iy)
      000078 3D               [ 4]  236 	dec	a
      000079 20 03            [12]  237 	jr	NZ, 00108$
                           00007B   238 	C$gamelogic.c$54$3_0$114	= .
                                    239 	.globl	C$gamelogic.c$54$3_0$114
                                    240 ;gamelogic.c:54: load_background_blackpalette();
      00007B CDr00r00         [17]  241 	call	_load_background_blackpalette
      00007E                        242 00108$:
                           00007E   243 	C$gamelogic.c$56$2_0$110	= .
                                    244 	.globl	C$gamelogic.c$56$2_0$110
                                    245 ;gamelogic.c:56: waitForFrame();
      00007E CDr00r00         [17]  246 	call	_waitForFrame
                           000081   247 	C$gamelogic.c$58$1_0$109	= .
                                    248 	.globl	C$gamelogic.c$58$1_0$109
                                    249 ;gamelogic.c:58: }
                           000081   250 	C$gamelogic.c$58$1_0$109	= .
                                    251 	.globl	C$gamelogic.c$58$1_0$109
                           000081   252 	XG$logo_screen$0$0	= .
                                    253 	.globl	XG$logo_screen$0$0
      000081 18 A2            [12]  254 	jr	00109$
                           000083   255 	G$fnaclogo_screen$0$0	= .
                                    256 	.globl	G$fnaclogo_screen$0$0
                           000083   257 	C$gamelogic.c$60$1_0$115	= .
                                    258 	.globl	C$gamelogic.c$60$1_0$115
                                    259 ;gamelogic.c:60: void fnaclogo_screen()
                                    260 ;	---------------------------------
                                    261 ; Function fnaclogo_screen
                                    262 ; ---------------------------------
      000083                        263 _fnaclogo_screen::
                           000083   264 	C$gamelogic.c$62$1_0$115	= .
                                    265 	.globl	C$gamelogic.c$62$1_0$115
                                    266 ;gamelogic.c:62: load_fnaclogo_assets();
      000083 CDr00r00         [17]  267 	call	_load_fnaclogo_assets
                           000086   268 	C$gamelogic.c$63$1_0$115	= .
                                    269 	.globl	C$gamelogic.c$63$1_0$115
                                    270 ;gamelogic.c:63: load_background_blackpalette();
      000086 CDr00r00         [17]  271 	call	_load_background_blackpalette
                           000089   272 	C$gamelogic.c$64$1_0$115	= .
                                    273 	.globl	C$gamelogic.c$64$1_0$115
                                    274 ;gamelogic.c:64: frame_cnt = 0;
      000089 21 00 00         [10]  275 	ld	hl, #0x0000
      00008C 22r00r00         [16]  276 	ld	(_frame_cnt), hl
                           00008F   277 	C$gamelogic.c$65$1_0$115	= .
                                    278 	.globl	C$gamelogic.c$65$1_0$115
                                    279 ;gamelogic.c:65: while (frame_cnt < 300)
      00008F                        280 00109$:
      00008F FD 21r00r00      [14]  281 	ld	iy, #_frame_cnt
      000093 FD 7E 00         [19]  282 	ld	a, 0 (iy)
      000096 D6 2C            [ 7]  283 	sub	a, #0x2c
      000098 FD 7E 01         [19]  284 	ld	a, 1 (iy)
      00009B DE 01            [ 7]  285 	sbc	a, #0x01
      00009D D0               [11]  286 	ret	NC
                           00009E   287 	C$gamelogic.c$67$2_0$116	= .
                                    288 	.globl	C$gamelogic.c$67$2_0$116
                                    289 ;gamelogic.c:67: frame_cnt++;
      00009E 2Ar00r00         [16]  290 	ld	hl, (_frame_cnt)
      0000A1 23               [ 6]  291 	inc	hl
      0000A2 22r00r00         [16]  292 	ld	(_frame_cnt), hl
                           0000A5   293 	C$gamelogic.c$68$2_0$116	= .
                                    294 	.globl	C$gamelogic.c$68$2_0$116
                                    295 ;gamelogic.c:68: if(frame_cnt == 25)
      0000A5 FD 7E 00         [19]  296 	ld	a, 0 (iy)
      0000A8 D6 19            [ 7]  297 	sub	a, #0x19
      0000AA FD B6 01         [19]  298 	or	a, 1 (iy)
      0000AD 20 03            [12]  299 	jr	NZ, 00102$
                           0000AF   300 	C$gamelogic.c$70$3_0$117	= .
                                    301 	.globl	C$gamelogic.c$70$3_0$117
                                    302 ;gamelogic.c:70: load_fnaclogo_halfpalette();
      0000AF CDr00r00         [17]  303 	call	_load_fnaclogo_halfpalette
      0000B2                        304 00102$:
                           0000B2   305 	C$gamelogic.c$72$2_0$116	= .
                                    306 	.globl	C$gamelogic.c$72$2_0$116
                                    307 ;gamelogic.c:72: if(frame_cnt == 50)
      0000B2 FD 21r00r00      [14]  308 	ld	iy, #_frame_cnt
      0000B6 FD 7E 00         [19]  309 	ld	a, 0 (iy)
      0000B9 D6 32            [ 7]  310 	sub	a, #0x32
      0000BB FD B6 01         [19]  311 	or	a, 1 (iy)
      0000BE 20 03            [12]  312 	jr	NZ, 00104$
                           0000C0   313 	C$gamelogic.c$74$3_0$118	= .
                                    314 	.globl	C$gamelogic.c$74$3_0$118
                                    315 ;gamelogic.c:74: load_fnaclogo_fullpalette();
      0000C0 CDr00r00         [17]  316 	call	_load_fnaclogo_fullpalette
      0000C3                        317 00104$:
                           0000C3   318 	C$gamelogic.c$76$2_0$116	= .
                                    319 	.globl	C$gamelogic.c$76$2_0$116
                                    320 ;gamelogic.c:76: if(frame_cnt == 250)
      0000C3 FD 21r00r00      [14]  321 	ld	iy, #_frame_cnt
      0000C7 FD 7E 00         [19]  322 	ld	a, 0 (iy)
      0000CA D6 FA            [ 7]  323 	sub	a, #0xfa
      0000CC FD B6 01         [19]  324 	or	a, 1 (iy)
      0000CF 20 03            [12]  325 	jr	NZ, 00106$
                           0000D1   326 	C$gamelogic.c$78$3_0$119	= .
                                    327 	.globl	C$gamelogic.c$78$3_0$119
                                    328 ;gamelogic.c:78: load_fnaclogo_halfpalette();
      0000D1 CDr00r00         [17]  329 	call	_load_fnaclogo_halfpalette
      0000D4                        330 00106$:
                           0000D4   331 	C$gamelogic.c$80$2_0$116	= .
                                    332 	.globl	C$gamelogic.c$80$2_0$116
                                    333 ;gamelogic.c:80: if(frame_cnt == 275)
      0000D4 FD 21r00r00      [14]  334 	ld	iy, #_frame_cnt
      0000D8 FD 7E 00         [19]  335 	ld	a, 0 (iy)
      0000DB D6 13            [ 7]  336 	sub	a, #0x13
      0000DD 20 09            [12]  337 	jr	NZ, 00108$
      0000DF FD 7E 01         [19]  338 	ld	a, 1 (iy)
      0000E2 3D               [ 4]  339 	dec	a
      0000E3 20 03            [12]  340 	jr	NZ, 00108$
                           0000E5   341 	C$gamelogic.c$82$3_0$120	= .
                                    342 	.globl	C$gamelogic.c$82$3_0$120
                                    343 ;gamelogic.c:82: load_background_blackpalette();
      0000E5 CDr00r00         [17]  344 	call	_load_background_blackpalette
      0000E8                        345 00108$:
                           0000E8   346 	C$gamelogic.c$84$2_0$116	= .
                                    347 	.globl	C$gamelogic.c$84$2_0$116
                                    348 ;gamelogic.c:84: waitForFrame();
      0000E8 CDr00r00         [17]  349 	call	_waitForFrame
                           0000EB   350 	C$gamelogic.c$86$1_0$115	= .
                                    351 	.globl	C$gamelogic.c$86$1_0$115
                                    352 ;gamelogic.c:86: }
                           0000EB   353 	C$gamelogic.c$86$1_0$115	= .
                                    354 	.globl	C$gamelogic.c$86$1_0$115
                           0000EB   355 	XG$fnaclogo_screen$0$0	= .
                                    356 	.globl	XG$fnaclogo_screen$0$0
      0000EB 18 A2            [12]  357 	jr	00109$
                           0000ED   358 	G$presentation_screen$0$0	= .
                                    359 	.globl	G$presentation_screen$0$0
                           0000ED   360 	C$gamelogic.c$88$1_0$121	= .
                                    361 	.globl	C$gamelogic.c$88$1_0$121
                                    362 ;gamelogic.c:88: void presentation_screen()
                                    363 ;	---------------------------------
                                    364 ; Function presentation_screen
                                    365 ; ---------------------------------
      0000ED                        366 _presentation_screen::
                           0000ED   367 	C$gamelogic.c$91$1_0$121	= .
                                    368 	.globl	C$gamelogic.c$91$1_0$121
                                    369 ;gamelogic.c:91: load_presentation_assets();
      0000ED CDr00r00         [17]  370 	call	_load_presentation_assets
                           0000F0   371 	C$gamelogic.c$92$1_0$121	= .
                                    372 	.globl	C$gamelogic.c$92$1_0$121
                                    373 ;gamelogic.c:92: load_background_blackpalette();
      0000F0 CDr00r00         [17]  374 	call	_load_background_blackpalette
                           0000F3   375 	C$gamelogic.c$93$1_0$121	= .
                                    376 	.globl	C$gamelogic.c$93$1_0$121
                                    377 ;gamelogic.c:93: play_presentation_music();
      0000F3 CDr00r00         [17]  378 	call	_play_presentation_music
                           0000F6   379 	C$gamelogic.c$94$1_0$121	= .
                                    380 	.globl	C$gamelogic.c$94$1_0$121
                                    381 ;gamelogic.c:94: frame_cnt = 0;
      0000F6 21 00 00         [10]  382 	ld	hl, #0x0000
      0000F9 22r00r00         [16]  383 	ld	(_frame_cnt), hl
                           0000FC   384 	C$gamelogic.c$95$1_0$121	= .
                                    385 	.globl	C$gamelogic.c$95$1_0$121
                                    386 ;gamelogic.c:95: while (frame_cnt < 800)
      0000FC                        387 00112$:
      0000FC FD 21r00r00      [14]  388 	ld	iy, #_frame_cnt
      000100 FD 7E 00         [19]  389 	ld	a, 0 (iy)
      000103 D6 20            [ 7]  390 	sub	a, #0x20
      000105 FD 7E 01         [19]  391 	ld	a, 1 (iy)
      000108 DE 03            [ 7]  392 	sbc	a, #0x03
      00010A D0               [11]  393 	ret	NC
                           00010B   394 	C$gamelogic.c$97$2_0$122	= .
                                    395 	.globl	C$gamelogic.c$97$2_0$122
                                    396 ;gamelogic.c:97: frame_cnt++;
      00010B 2Ar00r00         [16]  397 	ld	hl, (_frame_cnt)
      00010E 23               [ 6]  398 	inc	hl
      00010F 22r00r00         [16]  399 	ld	(_frame_cnt), hl
                           000112   400 	C$gamelogic.c$98$2_0$122	= .
                                    401 	.globl	C$gamelogic.c$98$2_0$122
                                    402 ;gamelogic.c:98: if(frame_cnt == 25)
      000112 FD 7E 00         [19]  403 	ld	a, 0 (iy)
      000115 D6 19            [ 7]  404 	sub	a, #0x19
      000117 FD B6 01         [19]  405 	or	a, 1 (iy)
      00011A 20 03            [12]  406 	jr	NZ, 00102$
                           00011C   407 	C$gamelogic.c$100$3_0$123	= .
                                    408 	.globl	C$gamelogic.c$100$3_0$123
                                    409 ;gamelogic.c:100: load_presentation_halfpalette();
      00011C CDr00r00         [17]  410 	call	_load_presentation_halfpalette
      00011F                        411 00102$:
                           00011F   412 	C$gamelogic.c$102$2_0$122	= .
                                    413 	.globl	C$gamelogic.c$102$2_0$122
                                    414 ;gamelogic.c:102: if(frame_cnt == 50)
      00011F FD 21r00r00      [14]  415 	ld	iy, #_frame_cnt
      000123 FD 7E 00         [19]  416 	ld	a, 0 (iy)
      000126 D6 32            [ 7]  417 	sub	a, #0x32
      000128 FD B6 01         [19]  418 	or	a, 1 (iy)
      00012B 20 03            [12]  419 	jr	NZ, 00104$
                           00012D   420 	C$gamelogic.c$104$3_0$124	= .
                                    421 	.globl	C$gamelogic.c$104$3_0$124
                                    422 ;gamelogic.c:104: load_presentation_fullpalette();
      00012D CDr00r00         [17]  423 	call	_load_presentation_fullpalette
      000130                        424 00104$:
                           000130   425 	C$gamelogic.c$106$2_0$122	= .
                                    426 	.globl	C$gamelogic.c$106$2_0$122
                                    427 ;gamelogic.c:106: if(frame_cnt == 750)
      000130 FD 21r00r00      [14]  428 	ld	iy, #_frame_cnt
      000134 FD 7E 00         [19]  429 	ld	a, 0 (iy)
      000137 D6 EE            [ 7]  430 	sub	a, #0xee
      000139 20 0A            [12]  431 	jr	NZ, 00106$
      00013B FD 7E 01         [19]  432 	ld	a, 1 (iy)
      00013E D6 02            [ 7]  433 	sub	a, #0x02
      000140 20 03            [12]  434 	jr	NZ, 00106$
                           000142   435 	C$gamelogic.c$108$3_0$125	= .
                                    436 	.globl	C$gamelogic.c$108$3_0$125
                                    437 ;gamelogic.c:108: load_presentation_halfpalette();
      000142 CDr00r00         [17]  438 	call	_load_presentation_halfpalette
      000145                        439 00106$:
                           000145   440 	C$gamelogic.c$110$2_0$122	= .
                                    441 	.globl	C$gamelogic.c$110$2_0$122
                                    442 ;gamelogic.c:110: if(frame_cnt == 775)
      000145 FD 21r00r00      [14]  443 	ld	iy, #_frame_cnt
      000149 FD 7E 00         [19]  444 	ld	a, 0 (iy)
      00014C D6 07            [ 7]  445 	sub	a, #0x07
      00014E 20 0A            [12]  446 	jr	NZ, 00108$
      000150 FD 7E 01         [19]  447 	ld	a, 1 (iy)
      000153 D6 03            [ 7]  448 	sub	a, #0x03
      000155 20 03            [12]  449 	jr	NZ, 00108$
                           000157   450 	C$gamelogic.c$112$3_0$126	= .
                                    451 	.globl	C$gamelogic.c$112$3_0$126
                                    452 ;gamelogic.c:112: load_background_blackpalette();
      000157 CDr00r00         [17]  453 	call	_load_background_blackpalette
      00015A                        454 00108$:
                           00015A   455 	C$gamelogic.c$114$2_0$122	= .
                                    456 	.globl	C$gamelogic.c$114$2_0$122
                                    457 ;gamelogic.c:114: keys = devkit_SMS_getKeysStatus();
      00015A CDr00r00         [17]  458 	call	_devkit_SMS_getKeysStatus
                           00015D   459 	C$gamelogic.c$115$2_0$122	= .
                                    460 	.globl	C$gamelogic.c$115$2_0$122
                                    461 ;gamelogic.c:115: if(keys & devkit_PORT_A_KEY_1() && (frame_cnt < 740))
      00015D E5               [11]  462 	push	hl
      00015E CDr00r00         [17]  463 	call	_devkit_PORT_A_KEY_1
      000161 D1               [10]  464 	pop	de
      000162 7D               [ 4]  465 	ld	a, l
      000163 A3               [ 4]  466 	and	a, e
      000164 4F               [ 4]  467 	ld	c, a
      000165 7C               [ 4]  468 	ld	a, h
      000166 A2               [ 4]  469 	and	a, d
      000167 B1               [ 4]  470 	or	a, c
      000168 28 16            [12]  471 	jr	Z, 00110$
      00016A FD 21r00r00      [14]  472 	ld	iy, #_frame_cnt
      00016E FD 7E 00         [19]  473 	ld	a, 0 (iy)
      000171 D6 E4            [ 7]  474 	sub	a, #0xe4
      000173 FD 7E 01         [19]  475 	ld	a, 1 (iy)
      000176 DE 02            [ 7]  476 	sbc	a, #0x02
      000178 30 06            [12]  477 	jr	NC, 00110$
                           00017A   478 	C$gamelogic.c$117$3_0$127	= .
                                    479 	.globl	C$gamelogic.c$117$3_0$127
                                    480 ;gamelogic.c:117: frame_cnt = 740;
      00017A 21 E4 02         [10]  481 	ld	hl, #0x02e4
      00017D 22r00r00         [16]  482 	ld	(_frame_cnt), hl
      000180                        483 00110$:
                           000180   484 	C$gamelogic.c$119$2_0$122	= .
                                    485 	.globl	C$gamelogic.c$119$2_0$122
                                    486 ;gamelogic.c:119: waitForFrame();
      000180 CDr00r00         [17]  487 	call	_waitForFrame
                           000183   488 	C$gamelogic.c$121$1_0$121	= .
                                    489 	.globl	C$gamelogic.c$121$1_0$121
                                    490 ;gamelogic.c:121: }
                           000183   491 	C$gamelogic.c$121$1_0$121	= .
                                    492 	.globl	C$gamelogic.c$121$1_0$121
                           000183   493 	XG$presentation_screen$0$0	= .
                                    494 	.globl	XG$presentation_screen$0$0
      000183 C3rFCr00         [10]  495 	jp	00112$
                           000186   496 	G$game_loop$0$0	= .
                                    497 	.globl	G$game_loop$0$0
                           000186   498 	C$gamelogic.c$123$1_0$128	= .
                                    499 	.globl	C$gamelogic.c$123$1_0$128
                                    500 ;gamelogic.c:123: void game_loop()
                                    501 ;	---------------------------------
                                    502 ; Function game_loop
                                    503 ; ---------------------------------
      000186                        504 _game_loop::
                           000186   505 	C$gamelogic.c$125$1_0$128	= .
                                    506 	.globl	C$gamelogic.c$125$1_0$128
                                    507 ;gamelogic.c:125: devkit_SMS_setBackdropColor(1);
      000186 3E 01            [ 7]  508 	ld	a, #0x01
      000188 F5               [11]  509 	push	af
      000189 33               [ 6]  510 	inc	sp
      00018A CDr00r00         [17]  511 	call	_devkit_SMS_setBackdropColor
      00018D 33               [ 6]  512 	inc	sp
                           00018E   513 	C$gamelogic.c$126$1_0$128	= .
                                    514 	.globl	C$gamelogic.c$126$1_0$128
                                    515 ;gamelogic.c:126: load_level1_assets();
      00018E CDr00r00         [17]  516 	call	_load_level1_assets
                           000191   517 	C$gamelogic.c$127$1_0$128	= .
                                    518 	.globl	C$gamelogic.c$127$1_0$128
                                    519 ;gamelogic.c:127: init_gamestatus();
      000191 CDrBCr01         [17]  520 	call	_init_gamestatus
                           000194   521 	C$gamelogic.c$128$1_0$128	= .
                                    522 	.globl	C$gamelogic.c$128$1_0$128
                                    523 ;gamelogic.c:128: init_level1_scroll();
      000194 CDr00r00         [17]  524 	call	_init_level1_scroll
                           000197   525 	C$gamelogic.c$129$1_0$128	= .
                                    526 	.globl	C$gamelogic.c$129$1_0$128
                                    527 ;gamelogic.c:129: play_game_music();
      000197 CDr00r00         [17]  528 	call	_play_game_music
                           00019A   529 	C$gamelogic.c$130$1_0$128	= .
                                    530 	.globl	C$gamelogic.c$130$1_0$128
                                    531 ;gamelogic.c:130: add_player(1);
      00019A 3E 01            [ 7]  532 	ld	a, #0x01
      00019C F5               [11]  533 	push	af
      00019D 33               [ 6]  534 	inc	sp
      00019E CDr00r00         [17]  535 	call	_add_player
      0001A1 33               [ 6]  536 	inc	sp
                           0001A2   537 	C$gamelogic.c$132$1_0$128	= .
                                    538 	.globl	C$gamelogic.c$132$1_0$128
                                    539 ;gamelogic.c:132: frame_cnt = 0;
      0001A2 21 00 00         [10]  540 	ld	hl, #0x0000
      0001A5 22r00r00         [16]  541 	ld	(_frame_cnt), hl
                           0001A8   542 	C$gamelogic.c$133$1_0$128	= .
                                    543 	.globl	C$gamelogic.c$133$1_0$128
                                    544 ;gamelogic.c:133: scroll_enabled = true;
      0001A8 21r03r00         [10]  545 	ld	hl, #_scroll_enabled
      0001AB 36 01            [10]  546 	ld	(hl), #0x01
                           0001AD   547 	C$gamelogic.c$134$1_0$128	= .
                                    548 	.globl	C$gamelogic.c$134$1_0$128
                                    549 ;gamelogic.c:134: while (1)
      0001AD                        550 00104$:
                           0001AD   551 	C$gamelogic.c$136$2_0$129	= .
                                    552 	.globl	C$gamelogic.c$136$2_0$129
                                    553 ;gamelogic.c:136: if(!pause)
      0001AD 21r00r00         [10]  554 	ld	hl, #_pause
      0001B0 CB 46            [12]  555 	bit	0, (hl)
      0001B2 20 03            [12]  556 	jr	NZ, 00102$
                           0001B4   557 	C$gamelogic.c$138$3_0$130	= .
                                    558 	.globl	C$gamelogic.c$138$3_0$130
                                    559 ;gamelogic.c:138: execute_game_logic();
      0001B4 CDrC8r01         [17]  560 	call	_execute_game_logic
      0001B7                        561 00102$:
                           0001B7   562 	C$gamelogic.c$140$2_0$129	= .
                                    563 	.globl	C$gamelogic.c$140$2_0$129
                                    564 ;gamelogic.c:140: waitForFrame();
      0001B7 CDr00r00         [17]  565 	call	_waitForFrame
                           0001BA   566 	C$gamelogic.c$142$1_0$128	= .
                                    567 	.globl	C$gamelogic.c$142$1_0$128
                                    568 ;gamelogic.c:142: }
                           0001BA   569 	C$gamelogic.c$142$1_0$128	= .
                                    570 	.globl	C$gamelogic.c$142$1_0$128
                           0001BA   571 	XG$game_loop$0$0	= .
                                    572 	.globl	XG$game_loop$0$0
      0001BA 18 F1            [12]  573 	jr	00104$
                           0001BC   574 	G$init_gamestatus$0$0	= .
                                    575 	.globl	G$init_gamestatus$0$0
                           0001BC   576 	C$gamelogic.c$144$1_0$131	= .
                                    577 	.globl	C$gamelogic.c$144$1_0$131
                                    578 ;gamelogic.c:144: void init_gamestatus() {
                                    579 ;	---------------------------------
                                    580 ; Function init_gamestatus
                                    581 ; ---------------------------------
      0001BC                        582 _init_gamestatus::
                           0001BC   583 	C$gamelogic.c$145$1_0$131	= .
                                    584 	.globl	C$gamelogic.c$145$1_0$131
                                    585 ;gamelogic.c:145: game_status = GAME_STATUS_PLAYING;
      0001BC 21r00r00         [10]  586 	ld	hl, #_game_status
      0001BF 36 00            [10]  587 	ld	(hl), #0x00
                           0001C1   588 	C$gamelogic.c$146$1_0$131	= .
                                    589 	.globl	C$gamelogic.c$146$1_0$131
                                    590 ;gamelogic.c:146: score = 0;
      0001C1 21 00 00         [10]  591 	ld	hl, #0x0000
      0001C4 22r01r00         [16]  592 	ld	(_score), hl
                           0001C7   593 	C$gamelogic.c$147$1_0$131	= .
                                    594 	.globl	C$gamelogic.c$147$1_0$131
                                    595 ;gamelogic.c:147: }
                           0001C7   596 	C$gamelogic.c$147$1_0$131	= .
                                    597 	.globl	C$gamelogic.c$147$1_0$131
                           0001C7   598 	XG$init_gamestatus$0$0	= .
                                    599 	.globl	XG$init_gamestatus$0$0
      0001C7 C9               [10]  600 	ret
                           0001C8   601 	G$execute_game_logic$0$0	= .
                                    602 	.globl	G$execute_game_logic$0$0
                           0001C8   603 	C$gamelogic.c$149$1_0$132	= .
                                    604 	.globl	C$gamelogic.c$149$1_0$132
                                    605 ;gamelogic.c:149: void execute_game_logic()
                                    606 ;	---------------------------------
                                    607 ; Function execute_game_logic
                                    608 ; ---------------------------------
      0001C8                        609 _execute_game_logic::
                           0001C8   610 	C$gamelogic.c$152$1_0$132	= .
                                    611 	.globl	C$gamelogic.c$152$1_0$132
                                    612 ;gamelogic.c:152: switch (game_status)
      0001C8 3Ar00r00         [13]  613 	ld	a,(#_game_status + 0)
      0001CB B7               [ 4]  614 	or	a, a
      0001CC C0               [11]  615 	ret	NZ
                           0001CD   616 	C$gamelogic.c$156$2_0$133	= .
                                    617 	.globl	C$gamelogic.c$156$2_0$133
                                    618 ;gamelogic.c:156: keys = devkit_SMS_getKeysStatus();
      0001CD CDr00r00         [17]  619 	call	_devkit_SMS_getKeysStatus
                           0001D0   620 	C$gamelogic.c$157$2_0$133	= .
                                    621 	.globl	C$gamelogic.c$157$2_0$133
                                    622 ;gamelogic.c:157: manage_input(keys);
      0001D0 E5               [11]  623 	push	hl
      0001D1 CDr00r00         [17]  624 	call	_manage_input
      0001D4 F1               [10]  625 	pop	af
                           0001D5   626 	C$gamelogic.c$160$2_0$133	= .
                                    627 	.globl	C$gamelogic.c$160$2_0$133
                                    628 ;gamelogic.c:160: update_resources();
      0001D5 CDr00r00         [17]  629 	call	_update_resources
                           0001D8   630 	C$gamelogic.c$162$2_0$133	= .
                                    631 	.globl	C$gamelogic.c$162$2_0$133
                                    632 ;gamelogic.c:162: if(player1.vx > 0 && scroll_enabled)
      0001D8 ED 4Br02r00      [20]  633 	ld	bc, (#(_player1 + 0x0002) + 0)
      0001DC 78               [ 4]  634 	ld	a, b
      0001DD B1               [ 4]  635 	or	a, c
      0001DE 28 7A            [12]  636 	jr	Z, 00113$
      0001E0 21r03r00         [10]  637 	ld	hl, #_scroll_enabled
      0001E3 CB 46            [12]  638 	bit	0, (hl)
      0001E5 28 73            [12]  639 	jr	Z, 00113$
                           0001E7   640 	C$gamelogic.c$164$3_0$134	= .
                                    641 	.globl	C$gamelogic.c$164$3_0$134
                                    642 ;gamelogic.c:164: if(player1.entityreference->px > 200 && player1.xdirection == 1)
      0001E7 2Ar00r00         [16]  643 	ld	hl, (#_player1 + 0)
      0001EA 23               [ 6]  644 	inc	hl
      0001EB 23               [ 6]  645 	inc	hl
      0001EC 23               [ 6]  646 	inc	hl
      0001ED 5E               [ 7]  647 	ld	e, (hl)
      0001EE 3E C8            [ 7]  648 	ld	a, #0xc8
      0001F0 93               [ 4]  649 	sub	a, e
      0001F1 30 31            [12]  650 	jr	NC, 00109$
      0001F3 3Ar06r00         [13]  651 	ld	a, (#_player1 + 6)
      0001F6 3D               [ 4]  652 	dec	a
      0001F7 20 2B            [12]  653 	jr	NZ, 00109$
                           0001F9   654 	C$gamelogic.c$166$4_0$135	= .
                                    655 	.globl	C$gamelogic.c$166$4_0$135
                                    656 ;gamelogic.c:166: update_scroll(UFIX2CHAR(player1.vx),0);
      0001F9 78               [ 4]  657 	ld	a, b
      0001FA 26 00            [ 7]  658 	ld	h, #0x00
      0001FC E5               [11]  659 	push	hl
      0001FD 33               [ 6]  660 	inc	sp
      0001FE F5               [11]  661 	push	af
      0001FF 33               [ 6]  662 	inc	sp
      000200 CDr00r00         [17]  663 	call	_update_scroll
      000203 F1               [10]  664 	pop	af
                           000204   665 	C$gamelogic.c$167$4_0$135	= .
                                    666 	.globl	C$gamelogic.c$167$4_0$135
                                    667 ;gamelogic.c:167: if(get_scroll_position_x() > 1200){
      000204 CDr00r00         [17]  668 	call	_get_scroll_position_x
      000207 3E B0            [ 7]  669 	ld	a, #0xb0
      000209 BD               [ 4]  670 	cp	a, l
      00020A 3E 04            [ 7]  671 	ld	a, #0x04
      00020C 9C               [ 4]  672 	sbc	a, h
      00020D 30 05            [12]  673 	jr	NC, 00103$
                           00020F   674 	C$gamelogic.c$168$5_0$136	= .
                                    675 	.globl	C$gamelogic.c$168$5_0$136
                                    676 ;gamelogic.c:168: scroll_enabled = false;
      00020F 21r03r00         [10]  677 	ld	hl, #_scroll_enabled
      000212 36 00            [10]  678 	ld	(hl), #0x00
      000214                        679 00103$:
                           000214   680 	C$gamelogic.c$171$4_0$135	= .
                                    681 	.globl	C$gamelogic.c$171$4_0$135
                                    682 ;gamelogic.c:171: update_player_positions(UFIX2CHAR(player1.vx),0); 
      000214 2Ar02r00         [16]  683 	ld	hl, (#(_player1 + 0x0002) + 0)
      000217 7C               [ 4]  684 	ld	a, h
      000218 26 00            [ 7]  685 	ld	h, #0x00
      00021A E5               [11]  686 	push	hl
      00021B 33               [ 6]  687 	inc	sp
      00021C F5               [11]  688 	push	af
      00021D 33               [ 6]  689 	inc	sp
      00021E CDr00r00         [17]  690 	call	_update_player_positions
      000221 F1               [10]  691 	pop	af
      000222 18 40            [12]  692 	jr	00114$
      000224                        693 00109$:
                           000224   694 	C$gamelogic.c$173$3_0$134	= .
                                    695 	.globl	C$gamelogic.c$173$3_0$134
                                    696 ;gamelogic.c:173: else if(player1.entityreference->px < 56 && player1.xdirection == -1)
      000224 7B               [ 4]  697 	ld	a, e
      000225 D6 38            [ 7]  698 	sub	a, #0x38
      000227 30 25            [12]  699 	jr	NC, 00105$
      000229 3Ar06r00         [13]  700 	ld	a, (#_player1 + 6)
      00022C 3C               [ 4]  701 	inc	a
      00022D 20 1F            [12]  702 	jr	NZ, 00105$
                           00022F   703 	C$gamelogic.c$175$4_0$137	= .
                                    704 	.globl	C$gamelogic.c$175$4_0$137
                                    705 ;gamelogic.c:175: update_scroll(UFIX2CHAR(player1.vx)*-1,0);
      00022F 48               [ 4]  706 	ld	c, b
      000230 AF               [ 4]  707 	xor	a, a
      000231 91               [ 4]  708 	sub	a, c
      000232 26 00            [ 7]  709 	ld	h, #0x00
      000234 E5               [11]  710 	push	hl
      000235 33               [ 6]  711 	inc	sp
      000236 F5               [11]  712 	push	af
      000237 33               [ 6]  713 	inc	sp
      000238 CDr00r00         [17]  714 	call	_update_scroll
      00023B F1               [10]  715 	pop	af
                           00023C   716 	C$gamelogic.c$176$4_0$137	= .
                                    717 	.globl	C$gamelogic.c$176$4_0$137
                                    718 ;gamelogic.c:176: update_player_positions(UFIX2CHAR(player1.vx)*-1,0); 
      00023C 2Ar02r00         [16]  719 	ld	hl, (#(_player1 + 0x0002) + 0)
      00023F 4C               [ 4]  720 	ld	c, h
      000240 AF               [ 4]  721 	xor	a, a
      000241 91               [ 4]  722 	sub	a, c
      000242 26 00            [ 7]  723 	ld	h, #0x00
      000244 E5               [11]  724 	push	hl
      000245 33               [ 6]  725 	inc	sp
      000246 F5               [11]  726 	push	af
      000247 33               [ 6]  727 	inc	sp
      000248 CDr00r00         [17]  728 	call	_update_player_positions
      00024B F1               [10]  729 	pop	af
      00024C 18 16            [12]  730 	jr	00114$
      00024E                        731 00105$:
                           00024E   732 	C$gamelogic.c$180$4_0$138	= .
                                    733 	.globl	C$gamelogic.c$180$4_0$138
                                    734 ;gamelogic.c:180: update_player_positions(0,0); 
      00024E AF               [ 4]  735 	xor	a, a
      00024F F5               [11]  736 	push	af
      000250 33               [ 6]  737 	inc	sp
      000251 AF               [ 4]  738 	xor	a, a
      000252 F5               [11]  739 	push	af
      000253 33               [ 6]  740 	inc	sp
      000254 CDr00r00         [17]  741 	call	_update_player_positions
      000257 F1               [10]  742 	pop	af
      000258 18 0A            [12]  743 	jr	00114$
      00025A                        744 00113$:
                           00025A   745 	C$gamelogic.c$185$3_0$139	= .
                                    746 	.globl	C$gamelogic.c$185$3_0$139
                                    747 ;gamelogic.c:185: update_player_positions(0,0);    
      00025A AF               [ 4]  748 	xor	a, a
      00025B F5               [11]  749 	push	af
      00025C 33               [ 6]  750 	inc	sp
      00025D AF               [ 4]  751 	xor	a, a
      00025E F5               [11]  752 	push	af
      00025F 33               [ 6]  753 	inc	sp
      000260 CDr00r00         [17]  754 	call	_update_player_positions
      000263 F1               [10]  755 	pop	af
      000264                        756 00114$:
                           000264   757 	C$gamelogic.c$187$2_0$133	= .
                                    758 	.globl	C$gamelogic.c$187$2_0$133
                                    759 ;gamelogic.c:187: frame_cnt++;
      000264 2Ar00r00         [16]  760 	ld	hl, (_frame_cnt)
      000267 23               [ 6]  761 	inc	hl
      000268 22r00r00         [16]  762 	ld	(_frame_cnt), hl
                           00026B   763 	C$gamelogic.c$191$1_0$132	= .
                                    764 	.globl	C$gamelogic.c$191$1_0$132
                                    765 ;gamelogic.c:191: }
                           00026B   766 	C$gamelogic.c$192$1_0$132	= .
                                    767 	.globl	C$gamelogic.c$192$1_0$132
                                    768 ;gamelogic.c:192: }
                           00026B   769 	C$gamelogic.c$192$1_0$132	= .
                                    770 	.globl	C$gamelogic.c$192$1_0$132
                           00026B   771 	XG$execute_game_logic$0$0	= .
                                    772 	.globl	XG$execute_game_logic$0$0
      00026B C9               [10]  773 	ret
                                    774 	.area _CODE
                                    775 	.area _INITIALIZER
                                    776 	.area _CABS (ABS)
